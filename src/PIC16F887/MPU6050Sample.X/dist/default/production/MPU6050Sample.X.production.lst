

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Mar 14 13:22:29 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	text10,local,class=CODE,merge=1,delta=2
    18                           	psect	text11,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0013                     _SSPBUF	set	19
   213  0014                     _SSPCONbits	set	20
   214  0063                     _SSPIF	set	99
   215  0091                     _SSPCON2bits	set	145
   216  0093                     _SSPADD	set	147
   217  0091                     _SSPCON2	set	145
   218  0094                     _SSPSTATbits	set	148
   219  0094                     _SSPSTAT	set	148
   220  0087                     _TRISCbits	set	135
   221  048E                     _ACKSTAT	set	1166
   222  0463                     _SSPIE	set	1123
   223                           
   224                           	psect	cinit
   225  07FA                     start_initialization:	
   226                           ; #config settings
   227                           
   228  07FA                     __initialization:
   229                           
   230                           ; Clear objects allocated to COMMON
   231  07FA  01FB               	clrf	__pbssCOMMON& (0+127)
   232  07FB  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   233  07FC                     end_of_initialization:	
   234                           ;End of C runtime variable initialization code
   235                           
   236  07FC                     __end_of__initialization:
   237  07FC  0183               	clrf	3
   238  07FD  120A  118A  2FA1   	ljmp	_main	;jump to C main() function
   239                           
   240                           	psect	bssCOMMON
   241  007B                     __pbssCOMMON:
   242  007B                     _ackMode:
   243  007B                     	ds	1
   244  007C                     _data:
   245  007C                     	ds	1
   246                           
   247                           	psect	cstackCOMMON
   248  0070                     __pcstackCOMMON:
   249  0070                     ?_I2C_Write:
   250  0070                     ??_I2C_Write:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?_I2C_Wait:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ??_I2C_Wait:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?_I2C_Ack:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ??_I2C_Ack:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ?_I2C_Nack:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0070                     ??_I2C_Nack:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     ?_MPU6050_Init:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ?_I2C_Init:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ??_I2C_Init:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ?_I2C_Start:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_I2C_RepeatedStart:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ?_I2C_Stop:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ??_I2C_Stop:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?_I2C_Read:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ??_I2C_Read:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     ?_main:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     I2C_Init@mode:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     I2C_Write@data:	
   305                           ; 1 bytes @ 0x0
   306                           
   307                           
   308                           ; 1 bytes @ 0x0
   309  0070                     	ds	1
   310  0071                     ??_I2C_Start:
   311  0071                     ??_I2C_RepeatedStart:	
   312                           ; 1 bytes @ 0x1
   313                           
   314  0071                     I2C_RepeatedStart@address:	
   315                           ; 1 bytes @ 0x1
   316                           
   317  0071                     I2C_Read@mode:	
   318                           ; 1 bytes @ 0x1
   319                           
   320                           
   321                           ; 1 bytes @ 0x1
   322  0071                     	ds	1
   323  0072                     I2C_Read@buffer:
   324                           
   325                           ; 1 bytes @ 0x2
   326  0072                     	ds	1
   327  0073                     I2C_Start@address:
   328                           
   329                           ; 1 bytes @ 0x3
   330  0073                     	ds	1
   331  0074                     ?_MPU6050_SetRegister:
   332  0074                     MPU6050_SetRegister@value:	
   333                           ; 1 bytes @ 0x4
   334                           
   335                           
   336                           ; 1 bytes @ 0x4
   337  0074                     	ds	1
   338  0075                     ??_MPU6050_SetRegister:
   339                           
   340                           ; 1 bytes @ 0x5
   341  0075                     	ds	1
   342  0076                     MPU6050_SetRegister@reg:
   343                           
   344                           ; 1 bytes @ 0x6
   345  0076                     	ds	1
   346  0077                     ??_MPU6050_Init:
   347                           
   348                           ; 1 bytes @ 0x7
   349  0077                     	ds	1
   350  0078                     ??_main:
   351                           
   352                           ; 1 bytes @ 0x8
   353  0078                     	ds	3
   354                           
   355                           	psect	maintext
   356  07A1                     __pmaintext:	
   357 ;;
   358 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   359 ;;
   360 ;; *************** function _main *****************
   361 ;; Defined at:
   362 ;;		line 46 in file "main.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, status,2, status,0, pclath, cstack
   371 ;; Tracked objects:
   372 ;;		On entry : B00/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   376 ;;      Params:         0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0
   378 ;;      Temps:          3       0       0       0       0
   379 ;;      Totals:         3       0       0       0       0
   380 ;;Total ram usage:        3 bytes
   381 ;; Hardware stack levels required when called: 5
   382 ;; This function calls:
   383 ;;		_I2C_Init
   384 ;;		_I2C_Read
   385 ;;		_I2C_RepeatedStart
   386 ;;		_I2C_Start
   387 ;;		_I2C_Stop
   388 ;;		_I2C_Write
   389 ;;		_MPU6050_Init
   390 ;; This function is called by:
   391 ;;		Startup code after reset
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395                           
   396                           ;psect for function _main
   397  07A1                     _main:
   398  07A1                     l839:	
   399                           ;incstack = 0
   400                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   401                           
   402                           
   403                           ;main.c: 47:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   404  07A1  3006               	movlw	6
   405  07A2  00FA               	movwf	??_main+2
   406  07A3  3013               	movlw	19
   407  07A4  00F9               	movwf	??_main+1
   408  07A5  30AD               	movlw	173
   409  07A6  00F8               	movwf	??_main
   410  07A7                     u177:
   411  07A7  0BF8               	decfsz	??_main,f
   412  07A8  2FA7               	goto	u177
   413  07A9  0BF9               	decfsz	??_main+1,f
   414  07AA  2FA7               	goto	u177
   415  07AB  0BFA               	decfsz	??_main+2,f
   416  07AC  2FA7               	goto	u177
   417  07AD  2FAE               	nop2
   418  07AE                     l841:
   419                           
   420                           ;main.c: 48:     I2C_Init(I2C_MASTER_MODE);
   421  07AE  3000               	movlw	0
   422  07AF  120A  118A  2744  120A  118A  	fcall	_I2C_Init
   423  07B4                     l843:
   424                           
   425                           ;main.c: 49:     MPU6050_Init();
   426  07B4  120A  118A  276E  120A  118A  	fcall	_MPU6050_Init
   427  07B9                     l845:
   428                           
   429                           ;main.c: 52:         ackMode = I2C_Start(0x69);
   430  07B9  3069               	movlw	105
   431  07BA  120A  118A  2724  120A  118A  	fcall	_I2C_Start
   432  07BF  00F8               	movwf	??_main
   433  07C0  0878               	movf	??_main,w
   434  07C1  00FB               	movwf	_ackMode
   435  07C2                     l847:
   436                           
   437                           ;main.c: 54:         if (ackMode == ACK) {
   438  07C2  087B               	movf	_ackMode,w
   439  07C3  1D03               	btfss	3,2
   440  07C4  2FC6               	goto	u151
   441  07C5  2FC7               	goto	u150
   442  07C6                     u151:
   443  07C6  2FE9               	goto	l855
   444  07C7                     u150:
   445  07C7                     l849:
   446                           
   447                           ;main.c: 55:             I2C_Write(0x75);
   448  07C7  3075               	movlw	117
   449  07C8  120A  118A  26B8  120A  118A  	fcall	_I2C_Write
   450                           
   451                           ;main.c: 56:             ackMode = I2C_RepeatedStart(0x69);
   452  07CD  3069               	movlw	105
   453  07CE  120A  118A  26CC  120A  118A  	fcall	_I2C_RepeatedStart
   454  07D3  00F8               	movwf	??_main
   455  07D4  0878               	movf	??_main,w
   456  07D5  00FB               	movwf	_ackMode
   457  07D6                     l851:
   458                           
   459                           ;main.c: 58:             if (ackMode == ACK) {
   460  07D6  087B               	movf	_ackMode,w
   461  07D7  1D03               	btfss	3,2
   462  07D8  2FDA               	goto	u161
   463  07D9  2FDB               	goto	u160
   464  07DA                     u161:
   465  07DA  2FE9               	goto	l855
   466  07DB                     u160:
   467  07DB                     l853:
   468                           
   469                           ;main.c: 59:                 data = I2C_Read(NACK);
   470  07DB  3001               	movlw	1
   471  07DC  120A  118A  2704  120A  118A  	fcall	_I2C_Read
   472  07E1  00F8               	movwf	??_main
   473  07E2  0878               	movf	??_main,w
   474  07E3  00FC               	movwf	_data
   475                           
   476                           ;main.c: 60:                 I2C_Stop();
   477  07E4  120A  118A  26AA  120A  118A  	fcall	_I2C_Stop
   478  07E9                     l855:
   479                           
   480                           ;main.c: 64:         _delay((unsigned long)((500)*(4000000/4000.0)));
   481  07E9  3003               	movlw	3
   482  07EA  00FA               	movwf	??_main+2
   483  07EB  308A               	movlw	138
   484  07EC  00F9               	movwf	??_main+1
   485  07ED  3055               	movlw	85
   486  07EE  00F8               	movwf	??_main
   487  07EF                     u187:
   488  07EF  0BF8               	decfsz	??_main,f
   489  07F0  2FEF               	goto	u187
   490  07F1  0BF9               	decfsz	??_main+1,f
   491  07F2  2FEF               	goto	u187
   492  07F3  0BFA               	decfsz	??_main+2,f
   493  07F4  2FEF               	goto	u187
   494  07F5  2FF6               	nop2
   495  07F6  2FB9               	goto	l845
   496  07F7  120A  118A  2800   	ljmp	start
   497  07FA                     __end_of_main:
   498                           
   499                           	psect	text1
   500  076E                     __ptext1:	
   501 ;; *************** function _MPU6050_Init *****************
   502 ;; Defined at:
   503 ;;		line 68 in file "main.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;		None
   506 ;; Auto vars:     Size  Location     Type
   507 ;;		None
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, status,2, status,0, pclath, cstack
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   517 ;;      Params:         0       0       0       0       0
   518 ;;      Locals:         0       0       0       0       0
   519 ;;      Temps:          1       0       0       0       0
   520 ;;      Totals:         1       0       0       0       0
   521 ;;Total ram usage:        1 bytes
   522 ;; Hardware stack levels used: 1
   523 ;; Hardware stack levels required when called: 4
   524 ;; This function calls:
   525 ;;		_MPU6050_SetRegister
   526 ;; This function is called by:
   527 ;;		_main
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           
   532                           ;psect for function _MPU6050_Init
   533  076E                     _MPU6050_Init:
   534  076E                     l837:	
   535                           ;incstack = 0
   536                           ; Regs used in _MPU6050_Init: [wreg+status,2+status,0+pclath+cstack]
   537                           
   538                           
   539                           ;main.c: 69:     MPU6050_SetRegister(0x19, 0x07);
   540  076E  3007               	movlw	7
   541  076F  00F7               	movwf	??_MPU6050_Init
   542  0770  0877               	movf	??_MPU6050_Init,w
   543  0771  00F4               	movwf	MPU6050_SetRegister@value
   544  0772  3019               	movlw	25
   545  0773  120A  118A  26E8  120A  118A  	fcall	_MPU6050_SetRegister
   546                           
   547                           ;main.c: 70:     MPU6050_SetRegister(0x6B, 0x01);
   548  0778  01F4               	clrf	MPU6050_SetRegister@value
   549  0779  0AF4               	incf	MPU6050_SetRegister@value,f
   550  077A  306B               	movlw	107
   551  077B  120A  118A  26E8  120A  118A  	fcall	_MPU6050_SetRegister
   552                           
   553                           ;main.c: 71:     MPU6050_SetRegister(0x1A, 0x00);
   554  0780  01F4               	clrf	MPU6050_SetRegister@value
   555  0781  301A               	movlw	26
   556  0782  120A  118A  26E8  120A  118A  	fcall	_MPU6050_SetRegister
   557                           
   558                           ;main.c: 72:     MPU6050_SetRegister(0x1C, 0x00);
   559  0787  01F4               	clrf	MPU6050_SetRegister@value
   560  0788  301C               	movlw	28
   561  0789  120A  118A  26E8  120A  118A  	fcall	_MPU6050_SetRegister
   562                           
   563                           ;main.c: 73:     MPU6050_SetRegister(0x1B, 0x18);
   564  078E  3018               	movlw	24
   565  078F  00F7               	movwf	??_MPU6050_Init
   566  0790  0877               	movf	??_MPU6050_Init,w
   567  0791  00F4               	movwf	MPU6050_SetRegister@value
   568  0792  301B               	movlw	27
   569  0793  120A  118A  26E8  120A  118A  	fcall	_MPU6050_SetRegister
   570                           
   571                           ;main.c: 74:     MPU6050_SetRegister(0x38, 0x01);
   572  0798  01F4               	clrf	MPU6050_SetRegister@value
   573  0799  0AF4               	incf	MPU6050_SetRegister@value,f
   574  079A  3038               	movlw	56
   575  079B  120A  118A  26E8  120A  118A  	fcall	_MPU6050_SetRegister
   576  07A0                     l111:
   577  07A0  0008               	return
   578  07A1                     __end_of_MPU6050_Init:
   579                           
   580                           	psect	text2
   581  06E8                     __ptext2:	
   582 ;; *************** function _MPU6050_SetRegister *****************
   583 ;; Defined at:
   584 ;;		line 77 in file "main.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;  reg             1    wreg     unsigned char 
   587 ;;  value           1    4[COMMON] unsigned char 
   588 ;; Auto vars:     Size  Location     Type
   589 ;;  reg             1    6[COMMON] unsigned char 
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, status,2, status,0, pclath, cstack
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   599 ;;      Params:         1       0       0       0       0
   600 ;;      Locals:         1       0       0       0       0
   601 ;;      Temps:          1       0       0       0       0
   602 ;;      Totals:         3       0       0       0       0
   603 ;;Total ram usage:        3 bytes
   604 ;; Hardware stack levels used: 1
   605 ;; Hardware stack levels required when called: 3
   606 ;; This function calls:
   607 ;;		_I2C_Start
   608 ;;		_I2C_Stop
   609 ;;		_I2C_Write
   610 ;; This function is called by:
   611 ;;		_MPU6050_Init
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           
   616                           ;psect for function _MPU6050_SetRegister
   617  06E8                     _MPU6050_SetRegister:
   618                           
   619                           ;incstack = 0
   620                           ; Regs used in _MPU6050_SetRegister: [wreg+status,2+status,0+pclath+cstack]
   621                           ;MPU6050_SetRegister@reg stored from wreg
   622  06E8  00F6               	movwf	MPU6050_SetRegister@reg
   623  06E9                     l835:
   624                           
   625                           ;main.c: 78:     ackMode = I2C_Start(0x69);
   626  06E9  3069               	movlw	105
   627  06EA  120A  118A  2724  120A  118A  	fcall	_I2C_Start
   628  06EF  00F5               	movwf	??_MPU6050_SetRegister
   629  06F0  0875               	movf	??_MPU6050_SetRegister,w
   630  06F1  00FB               	movwf	_ackMode
   631                           
   632                           ;main.c: 79:     I2C_Write(reg);
   633  06F2  0876               	movf	MPU6050_SetRegister@reg,w
   634  06F3  120A  118A  26B8  120A  118A  	fcall	_I2C_Write
   635                           
   636                           ;main.c: 80:     I2C_Write(value);
   637  06F8  0874               	movf	MPU6050_SetRegister@value,w
   638  06F9  120A  118A  26B8  120A  118A  	fcall	_I2C_Write
   639                           
   640                           ;main.c: 81:     I2C_Stop();
   641  06FE  120A  118A  26AA  120A  118A  	fcall	_I2C_Stop
   642  0703                     l114:
   643  0703  0008               	return
   644  0704                     __end_of_MPU6050_SetRegister:
   645                           
   646                           	psect	text3
   647  06AA                     __ptext3:	
   648 ;; *************** function _I2C_Stop *****************
   649 ;; Defined at:
   650 ;;		line 76 in file "./i2c.h"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      unsigned char 
   657 ;; Registers used:
   658 ;;		wreg
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   664 ;;      Params:         0       0       0       0       0
   665 ;;      Locals:         0       0       0       0       0
   666 ;;      Temps:          0       0       0       0       0
   667 ;;      Totals:         0       0       0       0       0
   668 ;;Total ram usage:        0 bytes
   669 ;; Hardware stack levels used: 1
   670 ;; This function calls:
   671 ;;		Nothing
   672 ;; This function is called by:
   673 ;;		_main
   674 ;;		_MPU6050_SetRegister
   675 ;;		_MPU6050_ReadRegister
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           
   680                           ;psect for function _I2C_Stop
   681  06AA                     _I2C_Stop:
   682  06AA                     l739:	
   683                           ;incstack = 0
   684                           ; Regs used in _I2C_Stop: [wreg]
   685                           
   686                           
   687                           ;./i2c.h: 77:     SSPCON2bits.PEN = 1;
   688  06AA  1683               	bsf	3,5	;RP0=1, select bank1
   689  06AB  1303               	bcf	3,6	;RP1=0, select bank1
   690  06AC  1511               	bsf	17,2	;volatile
   691  06AD                     l69:	
   692                           ;./i2c.h: 78:     while(SSPCON2bits.PEN);
   693                           
   694  06AD  1911               	btfsc	17,2	;volatile
   695  06AE  2EB0               	goto	u51
   696  06AF  2EB1               	goto	u50
   697  06B0                     u51:
   698  06B0  2EAD               	goto	l69
   699  06B1                     u50:
   700  06B1                     l71:
   701                           
   702                           ;./i2c.h: 79:     SSPIF = 0;
   703  06B1  1283               	bcf	3,5	;RP0=0, select bank0
   704  06B2  1303               	bcf	3,6	;RP1=0, select bank0
   705  06B3  118C               	bcf	12,3	;volatile
   706                           
   707                           ;./i2c.h: 80:     if (SSPSTATbits.P)
   708  06B4  1683               	bsf	3,5	;RP0=1, select bank1
   709  06B5  1303               	bcf	3,6	;RP1=0, select bank1
   710  06B6  0814               	movf	20,w	;volatile
   711  06B7                     l73:
   712  06B7  0008               	return
   713  06B8                     __end_of_I2C_Stop:
   714                           
   715                           	psect	text4
   716  0724                     __ptext4:	
   717 ;; *************** function _I2C_Start *****************
   718 ;; Defined at:
   719 ;;		line 36 in file "./i2c.h"
   720 ;; Parameters:    Size  Location     Type
   721 ;;  address         1    wreg     unsigned char 
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  address         1    3[COMMON] unsigned char 
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      enum E1477
   726 ;; Registers used:
   727 ;;		wreg, status,2, status,0, pclath, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   733 ;;      Params:         0       0       0       0       0
   734 ;;      Locals:         1       0       0       0       0
   735 ;;      Temps:          2       0       0       0       0
   736 ;;      Totals:         3       0       0       0       0
   737 ;;Total ram usage:        3 bytes
   738 ;; Hardware stack levels used: 1
   739 ;; Hardware stack levels required when called: 2
   740 ;; This function calls:
   741 ;;		_I2C_Write
   742 ;; This function is called by:
   743 ;;		_main
   744 ;;		_MPU6050_SetRegister
   745 ;;		_MPU6050_ReadRegister
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           
   750                           ;psect for function _I2C_Start
   751  0724                     _I2C_Start:
   752                           
   753                           ;incstack = 0
   754                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
   755                           ;I2C_Start@address stored from wreg
   756  0724  00F3               	movwf	I2C_Start@address
   757  0725                     l727:
   758                           
   759                           ;./i2c.h: 37:     address = (unsigned char)(address << 1) | 0x00;
   760  0725  0873               	movf	I2C_Start@address,w
   761  0726  00F1               	movwf	??_I2C_Start
   762  0727  0771               	addwf	??_I2C_Start,w
   763  0728  00F2               	movwf	??_I2C_Start+1
   764  0729  0872               	movf	??_I2C_Start+1,w
   765  072A  00F3               	movwf	I2C_Start@address
   766  072B                     l729:
   767                           
   768                           ;./i2c.h: 38:     SSPCON2bits.SEN = 1;
   769  072B  1683               	bsf	3,5	;RP0=1, select bank1
   770  072C  1303               	bcf	3,6	;RP1=0, select bank1
   771  072D  1411               	bsf	17,0	;volatile
   772  072E                     l44:	
   773                           ;./i2c.h: 39:     while (SSPCON2bits.SEN);
   774                           
   775  072E  1811               	btfsc	17,0	;volatile
   776  072F  2F31               	goto	u31
   777  0730  2F32               	goto	u30
   778  0731                     u31:
   779  0731  2F2E               	goto	l44
   780  0732                     u30:
   781  0732                     l46:
   782                           
   783                           ;./i2c.h: 40:     SSPIF = 0;
   784  0732  1283               	bcf	3,5	;RP0=0, select bank0
   785  0733  1303               	bcf	3,6	;RP1=0, select bank0
   786  0734  118C               	bcf	12,3	;volatile
   787                           
   788                           ;./i2c.h: 42:     if(!SSPSTATbits.S)
   789  0735  1683               	bsf	3,5	;RP0=1, select bank1
   790  0736  1303               	bcf	3,6	;RP1=0, select bank1
   791  0737  1994               	btfsc	20,3	;volatile
   792  0738  2F3A               	goto	u41
   793  0739  2F3B               	goto	u40
   794  073A                     u41:
   795  073A  2F3D               	goto	l735
   796  073B                     u40:
   797  073B                     l731:
   798                           
   799                           ;./i2c.h: 43:         return 1;
   800  073B  3001               	movlw	1
   801  073C  2F43               	goto	l48
   802  073D                     l735:
   803                           
   804                           ;./i2c.h: 45:     return I2C_Write(address);
   805  073D  0873               	movf	I2C_Start@address,w
   806  073E  120A  118A  26B8  120A  118A  	fcall	_I2C_Write
   807  0743                     l48:
   808  0743  0008               	return
   809  0744                     __end_of_I2C_Start:
   810                           
   811                           	psect	text5
   812  06CC                     __ptext5:	
   813 ;; *************** function _I2C_RepeatedStart *****************
   814 ;; Defined at:
   815 ;;		line 48 in file "./i2c.h"
   816 ;; Parameters:    Size  Location     Type
   817 ;;  address         1    wreg     unsigned char 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  address         1    1[COMMON] unsigned char 
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      enum E1477
   822 ;; Registers used:
   823 ;;		wreg, status,2, status,0, pclath, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   829 ;;      Params:         0       0       0       0       0
   830 ;;      Locals:         1       0       0       0       0
   831 ;;      Temps:          0       0       0       0       0
   832 ;;      Totals:         1       0       0       0       0
   833 ;;Total ram usage:        1 bytes
   834 ;; Hardware stack levels used: 1
   835 ;; Hardware stack levels required when called: 2
   836 ;; This function calls:
   837 ;;		_I2C_Write
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           
   844                           ;psect for function _I2C_RepeatedStart
   845  06CC                     _I2C_RepeatedStart:
   846                           
   847                           ;incstack = 0
   848                           ; Regs used in _I2C_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
   849                           ;I2C_RepeatedStart@address stored from wreg
   850  06CC  00F1               	movwf	I2C_RepeatedStart@address
   851  06CD                     l771:
   852                           
   853                           ;./i2c.h: 49:     address = (unsigned char)(address << 1) | 0x01;
   854  06CD  1403               	setc
   855  06CE  0DF1               	rlf	I2C_RepeatedStart@address,f
   856  06CF                     l773:
   857                           
   858                           ;./i2c.h: 50:     SSPCON2bits.RSEN = 1;
   859  06CF  1683               	bsf	3,5	;RP0=1, select bank1
   860  06D0  1303               	bcf	3,6	;RP1=0, select bank1
   861  06D1  1491               	bsf	17,1	;volatile
   862  06D2                     l51:	
   863                           ;./i2c.h: 52:     while (SSPCON2bits.RSEN);
   864                           
   865  06D2  1891               	btfsc	17,1	;volatile
   866  06D3  2ED5               	goto	u91
   867  06D4  2ED6               	goto	u90
   868  06D5                     u91:
   869  06D5  2ED2               	goto	l51
   870  06D6                     u90:
   871  06D6                     l53:
   872                           
   873                           ;./i2c.h: 53:     SSPIF = 0;
   874  06D6  1283               	bcf	3,5	;RP0=0, select bank0
   875  06D7  1303               	bcf	3,6	;RP1=0, select bank0
   876  06D8  118C               	bcf	12,3	;volatile
   877                           
   878                           ;./i2c.h: 55:     if(!SSPSTATbits.S)
   879  06D9  1683               	bsf	3,5	;RP0=1, select bank1
   880  06DA  1303               	bcf	3,6	;RP1=0, select bank1
   881  06DB  1994               	btfsc	20,3	;volatile
   882  06DC  2EDE               	goto	u101
   883  06DD  2EDF               	goto	u100
   884  06DE                     u101:
   885  06DE  2EE1               	goto	l779
   886  06DF                     u100:
   887  06DF                     l775:
   888                           
   889                           ;./i2c.h: 56:         return 1;
   890  06DF  3001               	movlw	1
   891  06E0  2EE7               	goto	l55
   892  06E1                     l779:
   893                           
   894                           ;./i2c.h: 58:     return I2C_Write(address);
   895  06E1  0871               	movf	I2C_RepeatedStart@address,w
   896  06E2  120A  118A  26B8  120A  118A  	fcall	_I2C_Write
   897  06E7                     l55:
   898  06E7  0008               	return
   899  06E8                     __end_of_I2C_RepeatedStart:
   900                           
   901                           	psect	text6
   902  06B8                     __ptext6:	
   903 ;; *************** function _I2C_Write *****************
   904 ;; Defined at:
   905 ;;		line 61 in file "./i2c.h"
   906 ;; Parameters:    Size  Location     Type
   907 ;;  data            1    wreg     unsigned char 
   908 ;; Auto vars:     Size  Location     Type
   909 ;;  data            1    0[COMMON] unsigned char 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      unsigned char 
   912 ;; Registers used:
   913 ;;		wreg, status,2, status,0, pclath, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   919 ;;      Params:         0       0       0       0       0
   920 ;;      Locals:         1       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0
   922 ;;      Totals:         1       0       0       0       0
   923 ;;Total ram usage:        1 bytes
   924 ;; Hardware stack levels used: 1
   925 ;; Hardware stack levels required when called: 1
   926 ;; This function calls:
   927 ;;		_I2C_Wait
   928 ;; This function is called by:
   929 ;;		_I2C_Start
   930 ;;		_I2C_RepeatedStart
   931 ;;		_main
   932 ;;		_MPU6050_SetRegister
   933 ;;		_MPU6050_ReadRegister
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           
   938                           ;psect for function _I2C_Write
   939  06B8                     _I2C_Write:
   940                           
   941                           ;incstack = 0
   942                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
   943                           ;I2C_Write@data stored from wreg
   944  06B8  00F0               	movwf	I2C_Write@data
   945  06B9                     l711:
   946                           
   947                           ;./i2c.h: 62:     SSPBUF = data;
   948  06B9  0870               	movf	I2C_Write@data,w
   949  06BA  1283               	bcf	3,5	;RP0=0, select bank0
   950  06BB  1303               	bcf	3,6	;RP1=0, select bank0
   951  06BC  0093               	movwf	19	;volatile
   952  06BD                     l713:
   953                           
   954                           ;./i2c.h: 63:     I2C_Wait();
   955  06BD  120A  118A  2690  120A  118A  	fcall	_I2C_Wait
   956  06C2                     l715:
   957                           
   958                           ;./i2c.h: 65:     if(ACKSTAT)
   959  06C2  1683               	bsf	3,5	;RP0=1, select bank1
   960  06C3  1303               	bcf	3,6	;RP1=0, select bank1
   961  06C4  1F11               	btfss	17,6	;volatile
   962  06C5  2EC7               	goto	u21
   963  06C6  2EC8               	goto	u20
   964  06C7                     u21:
   965  06C7  2ECA               	goto	l723
   966  06C8                     u20:
   967  06C8                     l717:
   968                           
   969                           ;./i2c.h: 66:         return ACK;
   970  06C8  3000               	movlw	0
   971  06C9  2ECB               	goto	l59
   972  06CA                     l723:
   973                           
   974                           ;./i2c.h: 68:         return NACK;
   975  06CA  3001               	movlw	1
   976  06CB                     l59:
   977  06CB  0008               	return
   978  06CC                     __end_of_I2C_Write:
   979                           
   980                           	psect	text7
   981  0690                     __ptext7:	
   982 ;; *************** function _I2C_Wait *****************
   983 ;; Defined at:
   984 ;;		line 71 in file "./i2c.h"
   985 ;; Parameters:    Size  Location     Type
   986 ;;		None
   987 ;; Auto vars:     Size  Location     Type
   988 ;;		None
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		None
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   998 ;;      Params:         0       0       0       0       0
   999 ;;      Locals:         0       0       0       0       0
  1000 ;;      Temps:          0       0       0       0       0
  1001 ;;      Totals:         0       0       0       0       0
  1002 ;;Total ram usage:        0 bytes
  1003 ;; Hardware stack levels used: 1
  1004 ;; This function calls:
  1005 ;;		Nothing
  1006 ;; This function is called by:
  1007 ;;		_I2C_Write
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           
  1012                           ;psect for function _I2C_Wait
  1013  0690                     _I2C_Wait:
  1014  0690                     l709:	
  1015                           ;incstack = 0
  1016                           ; Regs used in _I2C_Wait: []
  1017                           
  1018  0690                     l63:	
  1019                           ;./i2c.h: 72:     while (!SSPIF);
  1020                           
  1021  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1022  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1023  0692  1D8C               	btfss	12,3	;volatile
  1024  0693  2E95               	goto	u11
  1025  0694  2E96               	goto	u10
  1026  0695                     u11:
  1027  0695  2E90               	goto	l63
  1028  0696                     u10:
  1029  0696                     l65:
  1030                           
  1031                           ;./i2c.h: 73:     SSPIF = 0;
  1032  0696  118C               	bcf	12,3	;volatile
  1033  0697                     l66:
  1034  0697  0008               	return
  1035  0698                     __end_of_I2C_Wait:
  1036                           
  1037                           	psect	text8
  1038  0704                     __ptext8:	
  1039 ;; *************** function _I2C_Read *****************
  1040 ;; Defined at:
  1041 ;;		line 86 in file "./i2c.h"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  mode            1    wreg     enum E1477
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  mode            1    1[COMMON] enum E1477
  1046 ;;  buffer          1    2[COMMON] unsigned char 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      unsigned char 
  1049 ;; Registers used:
  1050 ;;		wreg, status,2, status,0, pclath, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1056 ;;      Params:         0       0       0       0       0
  1057 ;;      Locals:         2       0       0       0       0
  1058 ;;      Temps:          1       0       0       0       0
  1059 ;;      Totals:         3       0       0       0       0
  1060 ;;Total ram usage:        3 bytes
  1061 ;; Hardware stack levels used: 1
  1062 ;; Hardware stack levels required when called: 1
  1063 ;; This function calls:
  1064 ;;		_I2C_Ack
  1065 ;;		_I2C_Nack
  1066 ;; This function is called by:
  1067 ;;		_main
  1068 ;;		_MPU6050_ReadRegister
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           
  1073                           ;psect for function _I2C_Read
  1074  0704                     _I2C_Read:
  1075                           
  1076                           ;incstack = 0
  1077                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  1078                           ;I2C_Read@mode stored from wreg
  1079  0704  00F1               	movwf	I2C_Read@mode
  1080  0705                     l783:
  1081  0705                     l785:
  1082                           
  1083                           ;./i2c.h: 88:     SSPCON2bits.RCEN = 1;
  1084  0705  1683               	bsf	3,5	;RP0=1, select bank1
  1085  0706  1303               	bcf	3,6	;RP1=0, select bank1
  1086  0707  1591               	bsf	17,3	;volatile
  1087  0708                     l77:	
  1088                           ;./i2c.h: 90:     while (!SSPSTATbits.BF);
  1089                           
  1090  0708  1C14               	btfss	20,0	;volatile
  1091  0709  2F0B               	goto	u111
  1092  070A  2F0C               	goto	u110
  1093  070B                     u111:
  1094  070B  2F08               	goto	l77
  1095  070C                     u110:
  1096  070C                     l787:
  1097                           
  1098                           ;./i2c.h: 91:     buffer = SSPBUF;
  1099  070C  1283               	bcf	3,5	;RP0=0, select bank0
  1100  070D  1303               	bcf	3,6	;RP1=0, select bank0
  1101  070E  0813               	movf	19,w	;volatile
  1102  070F  00F0               	movwf	??_I2C_Read
  1103  0710  0870               	movf	??_I2C_Read,w
  1104  0711  00F2               	movwf	I2C_Read@buffer
  1105  0712                     l789:
  1106                           
  1107                           ;./i2c.h: 93:     if(mode == ACK) {
  1108  0712  0871               	movf	I2C_Read@mode,w
  1109  0713  1D03               	btfss	3,2
  1110  0714  2F16               	goto	u121
  1111  0715  2F17               	goto	u120
  1112  0716                     u121:
  1113  0716  2F1D               	goto	l793
  1114  0717                     u120:
  1115  0717                     l791:
  1116                           
  1117                           ;./i2c.h: 94:         I2C_Ack();
  1118  0717  120A  118A  2698  120A  118A  	fcall	_I2C_Ack
  1119                           
  1120                           ;./i2c.h: 95:     } else {
  1121  071C  2F22               	goto	l795
  1122  071D                     l793:
  1123                           
  1124                           ;./i2c.h: 96:         I2C_Nack();
  1125  071D  120A  118A  26A1  120A  118A  	fcall	_I2C_Nack
  1126  0722                     l795:
  1127                           
  1128                           ;./i2c.h: 99:     return buffer;
  1129  0722  0872               	movf	I2C_Read@buffer,w
  1130  0723                     l82:
  1131  0723  0008               	return
  1132  0724                     __end_of_I2C_Read:
  1133                           
  1134                           	psect	text9
  1135  06A1                     __ptext9:	
  1136 ;; *************** function _I2C_Nack *****************
  1137 ;; Defined at:
  1138 ;;		line 108 in file "./i2c.h"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;		None
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      void 
  1145 ;; Registers used:
  1146 ;;		None
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1152 ;;      Params:         0       0       0       0       0
  1153 ;;      Locals:         0       0       0       0       0
  1154 ;;      Temps:          0       0       0       0       0
  1155 ;;      Totals:         0       0       0       0       0
  1156 ;;Total ram usage:        0 bytes
  1157 ;; Hardware stack levels used: 1
  1158 ;; This function calls:
  1159 ;;		Nothing
  1160 ;; This function is called by:
  1161 ;;		_I2C_Read
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           
  1166                           ;psect for function _I2C_Nack
  1167  06A1                     _I2C_Nack:
  1168  06A1                     l747:	
  1169                           ;incstack = 0
  1170                           ; Regs used in _I2C_Nack: []
  1171                           
  1172                           
  1173                           ;./i2c.h: 109:     SSPCON2bits.ACKDT = 1;
  1174  06A1  1683               	bsf	3,5	;RP0=1, select bank1
  1175  06A2  1303               	bcf	3,6	;RP1=0, select bank1
  1176  06A3  1691               	bsf	17,5	;volatile
  1177                           
  1178                           ;./i2c.h: 110:     SSPCON2bits.ACKEN = 1;
  1179  06A4  1611               	bsf	17,4	;volatile
  1180  06A5                     l91:	
  1181                           ;./i2c.h: 111:     while(SSPCON2bits.ACKEN);
  1182                           
  1183  06A5  1A11               	btfsc	17,4	;volatile
  1184  06A6  2EA8               	goto	u71
  1185  06A7  2EA9               	goto	u70
  1186  06A8                     u71:
  1187  06A8  2EA5               	goto	l91
  1188  06A9                     u70:
  1189  06A9                     l94:
  1190  06A9  0008               	return
  1191  06AA                     __end_of_I2C_Nack:
  1192                           
  1193                           	psect	text10
  1194  0698                     __ptext10:	
  1195 ;; *************** function _I2C_Ack *****************
  1196 ;; Defined at:
  1197 ;;		line 102 in file "./i2c.h"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;		None
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;		None
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      void 
  1204 ;; Registers used:
  1205 ;;		None
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1211 ;;      Params:         0       0       0       0       0
  1212 ;;      Locals:         0       0       0       0       0
  1213 ;;      Temps:          0       0       0       0       0
  1214 ;;      Totals:         0       0       0       0       0
  1215 ;;Total ram usage:        0 bytes
  1216 ;; Hardware stack levels used: 1
  1217 ;; This function calls:
  1218 ;;		Nothing
  1219 ;; This function is called by:
  1220 ;;		_I2C_Read
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           
  1225                           ;psect for function _I2C_Ack
  1226  0698                     _I2C_Ack:
  1227  0698                     l745:	
  1228                           ;incstack = 0
  1229                           ; Regs used in _I2C_Ack: []
  1230                           
  1231                           
  1232                           ;./i2c.h: 103:     SSPCON2bits.ACKDT = 0;
  1233  0698  1683               	bsf	3,5	;RP0=1, select bank1
  1234  0699  1303               	bcf	3,6	;RP1=0, select bank1
  1235  069A  1291               	bcf	17,5	;volatile
  1236                           
  1237                           ;./i2c.h: 104:     SSPCON2bits.ACKEN = 1;
  1238  069B  1611               	bsf	17,4	;volatile
  1239  069C                     l85:	
  1240                           ;./i2c.h: 105:     while(SSPCON2bits.ACKEN);
  1241                           
  1242  069C  1A11               	btfsc	17,4	;volatile
  1243  069D  2E9F               	goto	u61
  1244  069E  2EA0               	goto	u60
  1245  069F                     u61:
  1246  069F  2E9C               	goto	l85
  1247  06A0                     u60:
  1248  06A0                     l88:
  1249  06A0  0008               	return
  1250  06A1                     __end_of_I2C_Ack:
  1251                           
  1252                           	psect	text11
  1253  0744                     __ptext11:	
  1254 ;; *************** function _I2C_Init *****************
  1255 ;; Defined at:
  1256 ;;		line 17 in file "./i2c.h"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  mode            1    wreg     enum E1473
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  mode            1    0[COMMON] enum E1473
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		wreg, status,2, status,0
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1270 ;;      Params:         0       0       0       0       0
  1271 ;;      Locals:         1       0       0       0       0
  1272 ;;      Temps:          0       0       0       0       0
  1273 ;;      Totals:         1       0       0       0       0
  1274 ;;Total ram usage:        1 bytes
  1275 ;; Hardware stack levels used: 1
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_main
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           
  1284                           ;psect for function _I2C_Init
  1285  0744                     _I2C_Init:
  1286                           
  1287                           ;incstack = 0
  1288                           ; Regs used in _I2C_Init: [wreg+status,2+status,0]
  1289                           ;I2C_Init@mode stored from wreg
  1290  0744  00F0               	movwf	I2C_Init@mode
  1291  0745                     l751:
  1292                           
  1293                           ;./i2c.h: 18:     TRISCbits.TRISC3 = 1;
  1294  0745  1683               	bsf	3,5	;RP0=1, select bank1
  1295  0746  1303               	bcf	3,6	;RP1=0, select bank1
  1296  0747  1587               	bsf	7,3	;volatile
  1297                           
  1298                           ;./i2c.h: 19:     TRISCbits.TRISC4 = 1;
  1299  0748  1607               	bsf	7,4	;volatile
  1300                           
  1301                           ;./i2c.h: 20:     SSPCONbits.SSPEN = 1;
  1302  0749  1283               	bcf	3,5	;RP0=0, select bank0
  1303  074A  1303               	bcf	3,6	;RP1=0, select bank0
  1304  074B  1694               	bsf	20,5	;volatile
  1305  074C                     l753:
  1306                           
  1307                           ;./i2c.h: 21:     SSPSTAT = 0;
  1308  074C  1683               	bsf	3,5	;RP0=1, select bank1
  1309  074D  1303               	bcf	3,6	;RP1=0, select bank1
  1310  074E  0194               	clrf	20	;volatile
  1311  074F                     l755:
  1312                           
  1313                           ;./i2c.h: 22:     SSPSTATbits.SMP = 1;
  1314  074F  1794               	bsf	20,7	;volatile
  1315  0750                     l757:
  1316                           
  1317                           ;./i2c.h: 24:     if(mode == I2C_MASTER_MODE) {
  1318  0750  0870               	movf	I2C_Init@mode,w
  1319  0751  1D03               	btfss	3,2
  1320  0752  2F54               	goto	u81
  1321  0753  2F55               	goto	u80
  1322  0754                     u81:
  1323  0754  2F5C               	goto	l761
  1324  0755                     u80:
  1325  0755                     l759:
  1326                           
  1327                           ;./i2c.h: 25:         SSPCONbits.SSPM = 0x8;
  1328  0755  1283               	bcf	3,5	;RP0=0, select bank0
  1329  0756  1303               	bcf	3,6	;RP1=0, select bank0
  1330  0757  0814               	movf	20,w	;volatile
  1331  0758  39F0               	andlw	-16
  1332  0759  3808               	iorlw	8
  1333  075A  0094               	movwf	20	;volatile
  1334                           
  1335                           ;./i2c.h: 26:     } else {
  1336  075B  2F62               	goto	l763
  1337  075C                     l761:
  1338                           
  1339                           ;./i2c.h: 27:         SSPCONbits.SSPM = 0x4;
  1340  075C  1283               	bcf	3,5	;RP0=0, select bank0
  1341  075D  1303               	bcf	3,6	;RP1=0, select bank0
  1342  075E  0814               	movf	20,w	;volatile
  1343  075F  39F0               	andlw	-16
  1344  0760  3804               	iorlw	4
  1345  0761  0094               	movwf	20	;volatile
  1346  0762                     l763:
  1347                           
  1348                           ;./i2c.h: 30:     SSPCON2 = 0;
  1349  0762  1683               	bsf	3,5	;RP0=1, select bank1
  1350  0763  1303               	bcf	3,6	;RP1=0, select bank1
  1351  0764  0191               	clrf	17	;volatile
  1352  0765                     l765:
  1353                           
  1354                           ;./i2c.h: 31:     SSPADD = 0x9;
  1355  0765  3009               	movlw	9
  1356  0766  0093               	movwf	19	;volatile
  1357  0767                     l767:
  1358                           
  1359                           ;./i2c.h: 32:     SSPIF=0;
  1360  0767  1283               	bcf	3,5	;RP0=0, select bank0
  1361  0768  1303               	bcf	3,6	;RP1=0, select bank0
  1362  0769  118C               	bcf	12,3	;volatile
  1363  076A                     l769:
  1364                           
  1365                           ;./i2c.h: 33:     SSPIE=1;
  1366  076A  1683               	bsf	3,5	;RP0=1, select bank1
  1367  076B  1303               	bcf	3,6	;RP1=0, select bank1
  1368  076C  158C               	bsf	12,3	;volatile
  1369  076D                     l41:
  1370  076D  0008               	return
  1371  076E                     __end_of_I2C_Init:
  1372  007E                     btemp	set	126	;btemp
  1373  007E                     wtemp0	set	126
  1374                           
  1375                           	psect	config
  1376                           
  1377                           ;Config register CONFIG1 @ 0x2007
  1378                           ;	Oscillator Selection bits
  1379                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1380                           ;	Watchdog Timer Enable bit
  1381                           ;	WDTE = ON, WDT enabled
  1382                           ;	Power-up Timer Enable bit
  1383                           ;	PWRTE = OFF, PWRT disabled
  1384                           ;	RE3/MCLR pin function select bit
  1385                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1386                           ;	Code Protection bit
  1387                           ;	CP = OFF, Program memory code protection is disabled
  1388                           ;	Data Code Protection bit
  1389                           ;	CPD = OFF, Data memory code protection is disabled
  1390                           ;	Brown Out Reset Selection bits
  1391                           ;	BOREN = ON, BOR enabled
  1392                           ;	Internal External Switchover bit
  1393                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1394                           ;	Fail-Safe Clock Monitor Enabled bit
  1395                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1396                           ;	Low Voltage Programming Enable bit
  1397                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1398                           ;	In-Circuit Debugger Mode bit
  1399                           ;	DEBUG = 0x1, unprogrammed default
  1400  2007                     	org	8199
  1401  2007  3FD9               	dw	16345
  1402                           
  1403                           ;Config register CONFIG2 @ 0x2008
  1404                           ;	Brown-out Reset Selection bit
  1405                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1406                           ;	Flash Program Memory Self Write Enable bits
  1407                           ;	WRT = OFF, Write protection off
  1408  2008                     	org	8200
  1409  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_MPU6050_Init
    _MPU6050_Init->_MPU6050_SetRegister
    _MPU6050_SetRegister->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_RepeatedStart->_I2C_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     710
                                              8 COMMON     3     3      0
                           _I2C_Init
                           _I2C_Read
                  _I2C_RepeatedStart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                       _MPU6050_Init
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         1     1      0     560
                                              7 COMMON     1     1      0
                _MPU6050_SetRegister
 ---------------------------------------------------------------------------------
 (2) _MPU6050_SetRegister                                  3     2      1     560
                                              4 COMMON     3     2      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            3     3      0      45
                                              1 COMMON     3     3      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_RepeatedStart                                    1     1      0      45
                                              1 COMMON     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             3     3      0      30
                                              0 COMMON     3     3      0
                            _I2C_Ack
                           _I2C_Nack
 ---------------------------------------------------------------------------------
 (2) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _I2C_Read
     _I2C_Ack
     _I2C_Nack
   _I2C_RepeatedStart
     _I2C_Write
       _I2C_Wait
   _I2C_Start
     _I2C_Write
   _I2C_Stop
   _I2C_Write
   _MPU6050_Init
     _MPU6050_SetRegister
       _I2C_Start
       _I2C_Stop
       _I2C_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Mar 14 13:22:29 2021

          __size_of_I2C_Start 0020                   _SSPSTATbits 0094            __size_of_I2C_Write 0014  
                          l41 076D                            l51 06D2                            l44 072E  
                          l53 06D6                            l46 0732                            l63 0690  
                          l55 06E7                            l71 06B1                            l48 0743  
                          l65 0696                            l73 06B7                            l82 0723  
                          l66 0697                            l91 06A5                            l59 06CB  
                          l85 069C                            l77 0708                            l69 06AD  
                          l94 06A9                            l88 06A0                            u10 0696  
                          u11 0695                            u20 06C8                            u21 06C7  
                          u30 0732                            u31 0731                            u40 073B  
                          u41 073A                            u50 06B1                            u51 06B0  
                          u60 06A0                            u61 069F                            u70 06A9  
                          u71 06A8                            u80 0755                            u81 0754  
                          u90 06D6                            u91 06D5                           l111 07A0  
                         l114 0703                           l711 06B9                           l713 06BD  
                         l723 06CA                           l715 06C2                           l731 073B  
                         l709 0690                           l717 06C8                           l751 0745  
                         l735 073D                           l727 0725                           l761 075C  
                         l753 074C                           l745 0698                           l729 072B  
                         l841 07AE                           l763 0762                           l755 074F  
                         l747 06A1                           l771 06CD                           l739 06AA  
                         l835 06E9                           l851 07D6                           l843 07B4  
                         l765 0765                           l757 0750                           l773 06CF  
                         l837 076E                           l853 07DB                           l845 07B9  
                         l767 0767                           l759 0755                           l791 0717  
                         l783 0705                           l775 06DF                           l855 07E9  
                         l847 07C2                           l839 07A1                           l769 076A  
                         l793 071D                           l785 0705                           l849 07C7  
                         l795 0722                           l787 070C                           l779 06E1  
                         l789 0712                           u100 06DF                           u101 06DE  
                         u110 070C                           u111 070B                           u120 0717  
                         u121 0716                           u150 07C7                           u151 07C6  
                         u160 07DB                           u161 07DA                           u177 07A7  
                         u187 07EF               __end_of_I2C_Ack 06A1                          _data 007C  
                        _main 07A1              __end_of_I2C_Nack 06AA              __end_of_I2C_Init 076E  
            __end_of_I2C_Read 0724                          btemp 007E              __end_of_I2C_Wait 0698  
            __end_of_I2C_Stop 06B8                          start 0000                         ?_main 0070  
    I2C_RepeatedStart@address 0071                         _SSPIE 0463                         _SSPIF 0063  
               ?_MPU6050_Init 0070             __end_of_I2C_Start 0744             __end_of_I2C_Write 06CC  
                       status 0003                         wtemp0 007E               __initialization 07FA  
                __end_of_main 07FA                     ??_I2C_Ack 0070                        ??_main 0078  
              ??_MPU6050_Init 0077              I2C_Start@address 0073                        _SSPADD 0093  
                      _SSPBUF 0013        MPU6050_SetRegister@reg 0076                     ?_I2C_Nack 0070  
                   ?_I2C_Init 0070                     ?_I2C_Read 0070                     ?_I2C_Wait 0070  
                   ?_I2C_Stop 0070       __end_of__initialization 07FC  __size_of_MPU6050_SetRegister 001C  
              __pcstackCOMMON 0070                    ??_I2C_Nack 0070                    ??_I2C_Init 0070  
                  ??_I2C_Read 0070                    ??_I2C_Wait 0070                    ??_I2C_Stop 0070  
                I2C_Init@mode 0070                    __pmaintext 07A1                  I2C_Read@mode 0071  
              I2C_Read@buffer 0072          __end_of_MPU6050_Init 07A1                       _I2C_Ack 0698  
                     _ACKSTAT 048E                       _SSPCON2 0091                       _SSPSTAT 0094  
                   _I2C_Start 0724                     _I2C_Write 06B8                       _ackMode 007B  
                     __ptext1 076E                       __ptext2 06E8                       __ptext3 06AA  
                     __ptext4 0724                       __ptext5 06CC                       __ptext6 06B8  
                     __ptext7 0690                       __ptext8 0704                       __ptext9 06A1  
        end_of_initialization 07FC                    ?_I2C_Start 0070                    ?_I2C_Write 0070  
         _MPU6050_SetRegister 06E8                     _TRISCbits 0087             __size_of_I2C_Nack 0009  
           __size_of_I2C_Init 002A             __size_of_I2C_Read 0020             __size_of_I2C_Wait 0008  
           __size_of_I2C_Stop 000E         __size_of_MPU6050_Init 0033          ?_MPU6050_SetRegister 0074  
         start_initialization 07FA                  _MPU6050_Init 076E                   ??_I2C_Start 0071  
                 ??_I2C_Write 0070         ??_MPU6050_SetRegister 0075             _I2C_RepeatedStart 06CC  
                    ?_I2C_Ack 0070            ?_I2C_RepeatedStart 0070                   __pbssCOMMON 007B  
                   ___latbits 0002           ??_I2C_RepeatedStart 0071     __end_of_I2C_RepeatedStart 06E8  
                    _I2C_Nack 06A1                      _I2C_Init 0744                      _I2C_Read 0704  
                    _I2C_Wait 0690                      _I2C_Stop 06AA              __size_of_I2C_Ack 0009  
  __size_of_I2C_RepeatedStart 001C                 I2C_Write@data 0070                      __ptext10 0698  
                    __ptext11 0744                 __size_of_main 0059      MPU6050_SetRegister@value 0074  
 __end_of_MPU6050_SetRegister 0704                   _SSPCON2bits 0091                    _SSPCONbits 0014  
