

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Mar 13 23:07:27 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	psect	text7,local,class=CODE,merge=1,delta=2
    14                           	psect	text8,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0013                     _SSPBUF	set	19
   209  0014                     _SSPCONbits	set	20
   210  0063                     _SSPIF	set	99
   211  0094                     _SSPSTATbits	set	148
   212  0091                     _SSPCON2bits	set	145
   213  0093                     _SSPADD	set	147
   214  0091                     _SSPCON2	set	145
   215  0087                     _TRISCbits	set	135
   216  048E                     _ACKSTAT	set	1166
   217  0463                     _SSPIE	set	1123
   218                           
   219                           	psect	cinit
   220  07FC                     start_initialization:	
   221                           ; #config settings
   222                           
   223  07FC                     __initialization:
   224  07FC                     end_of_initialization:	
   225                           ;End of C runtime variable initialization code
   226                           
   227  07FC                     __end_of__initialization:
   228  07FC  0183               	clrf	3
   229  07FD  120A  118A  2FDB   	ljmp	_main	;jump to C main() function
   230                           
   231                           	psect	cstackCOMMON
   232  0070                     __pcstackCOMMON:
   233  0070                     ?_I2C_Write:
   234  0070                     ??_I2C_Write:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ?_I2C_Wait:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ??_I2C_Wait:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0070                     ?_I2C_Ack:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     ??_I2C_Ack:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ?_I2C_Nack:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ??_I2C_Nack:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ?_I2C_Init:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ??_I2C_Init:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ?_I2C_Start:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ?_I2C_Stop:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ??_I2C_Stop:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ?_I2C_Read:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ??_I2C_Read:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ?_main:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     I2C_Init@mode:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     I2C_Write@data:	
   283                           ; 1 bytes @ 0x0
   284                           
   285                           
   286                           ; 1 bytes @ 0x0
   287  0070                     	ds	1
   288  0071                     ??_I2C_Start:
   289  0071                     I2C_Start@address:	
   290                           ; 1 bytes @ 0x1
   291                           
   292  0071                     I2C_Read@mode:	
   293                           ; 1 bytes @ 0x1
   294                           
   295                           
   296                           ; 1 bytes @ 0x1
   297  0071                     	ds	1
   298  0072                     I2C_Read@buffer:
   299                           
   300                           ; 1 bytes @ 0x2
   301  0072                     	ds	1
   302  0073                     ??_main:
   303                           
   304                           	psect	maintext
   305  07DB                     __pmaintext:	
   306                           ; 1 bytes @ 0x3
   307 ;;
   308 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   309 ;;
   310 ;; *************** function _main *****************
   311 ;; Defined at:
   312 ;;		line 30 in file "main.c"
   313 ;; Parameters:    Size  Location     Type
   314 ;;		None
   315 ;; Auto vars:     Size  Location     Type
   316 ;;  data            1    0        unsigned char 
   317 ;; Return value:  Size  Location     Type
   318 ;;                  1    wreg      void 
   319 ;; Registers used:
   320 ;;		wreg, status,2, status,0, pclath, cstack
   321 ;; Tracked objects:
   322 ;;		On entry : B00/0
   323 ;;		On exit  : 0/0
   324 ;;		Unchanged: 0/0
   325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   326 ;;      Params:         0       0       0       0       0
   327 ;;      Locals:         0       0       0       0       0
   328 ;;      Temps:          0       0       0       0       0
   329 ;;      Totals:         0       0       0       0       0
   330 ;;Total ram usage:        0 bytes
   331 ;; Hardware stack levels required when called: 3
   332 ;; This function calls:
   333 ;;		_I2C_Init
   334 ;;		_I2C_Read
   335 ;;		_I2C_Start
   336 ;;		_I2C_Stop
   337 ;;		_I2C_Write
   338 ;; This function is called by:
   339 ;;		Startup code after reset
   340 ;; This function uses a non-reentrant model
   341 ;;
   342                           
   343                           
   344                           ;psect for function _main
   345  07DB                     _main:
   346  07DB                     l741:	
   347                           ;incstack = 0
   348                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   349                           
   350  07DB                     l743:
   351                           
   352                           ;main.c: 32:     I2C_Init(I2C_MASTER_MODE);
   353  07DB  3000               	movlw	0
   354  07DC  120A  118A  279B  120A  118A  	fcall	_I2C_Init
   355  07E1                     l745:
   356                           
   357                           ;main.c: 35:         I2C_Start(0x68);
   358  07E1  3068               	movlw	104
   359  07E2  120A  118A  277D  120A  118A  	fcall	_I2C_Start
   360  07E7                     l747:
   361                           
   362                           ;main.c: 36:         I2C_Write(0x75);
   363  07E7  3075               	movlw	117
   364  07E8  120A  118A  2764  120A  118A  	fcall	_I2C_Write
   365  07ED                     l749:
   366  07ED  3000               	movlw	0
   367  07EE  120A  118A  27BB  120A  118A  	fcall	_I2C_Read
   368  07F3                     l751:
   369                           
   370                           ;main.c: 38:         I2C_Stop();
   371  07F3  120A  118A  276F  120A  118A  	fcall	_I2C_Stop
   372  07F8  2FE1               	goto	l745
   373  07F9  120A  118A  2800   	ljmp	start
   374  07FC                     __end_of_main:
   375                           
   376                           	psect	text1
   377  076F                     __ptext1:	
   378 ;; *************** function _I2C_Stop *****************
   379 ;; Defined at:
   380 ;;		line 61 in file "./i2c.h"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      unsigned char 
   387 ;; Registers used:
   388 ;;		wreg
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   394 ;;      Params:         0       0       0       0       0
   395 ;;      Locals:         0       0       0       0       0
   396 ;;      Temps:          0       0       0       0       0
   397 ;;      Totals:         0       0       0       0       0
   398 ;;Total ram usage:        0 bytes
   399 ;; Hardware stack levels used: 1
   400 ;; This function calls:
   401 ;;		Nothing
   402 ;; This function is called by:
   403 ;;		_main
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407                           
   408                           ;psect for function _I2C_Stop
   409  076F                     _I2C_Stop:
   410  076F                     l719:	
   411                           ;incstack = 0
   412                           ; Regs used in _I2C_Stop: [wreg]
   413                           
   414                           
   415                           ;./i2c.h: 62:     SSPCON2bits.PEN = 1;
   416  076F  1683               	bsf	3,5	;RP0=1, select bank1
   417  0770  1303               	bcf	3,6	;RP1=0, select bank1
   418  0771  1511               	bsf	17,2	;volatile
   419  0772                     l54:	
   420                           ;./i2c.h: 63:     while(SSPCON2bits.PEN);
   421                           
   422  0772  1911               	btfsc	17,2	;volatile
   423  0773  2F75               	goto	u71
   424  0774  2F76               	goto	u70
   425  0775                     u71:
   426  0775  2F72               	goto	l54
   427  0776                     u70:
   428  0776                     l56:
   429                           
   430                           ;./i2c.h: 64:     SSPIF = 0;
   431  0776  1283               	bcf	3,5	;RP0=0, select bank0
   432  0777  1303               	bcf	3,6	;RP1=0, select bank0
   433  0778  118C               	bcf	12,3	;volatile
   434                           
   435                           ;./i2c.h: 65:     if (SSPSTATbits.P)
   436  0779  1683               	bsf	3,5	;RP0=1, select bank1
   437  077A  1303               	bcf	3,6	;RP1=0, select bank1
   438  077B  0814               	movf	20,w	;volatile
   439  077C                     l58:
   440  077C  0008               	return
   441  077D                     __end_of_I2C_Stop:
   442                           
   443                           	psect	text2
   444  077D                     __ptext2:	
   445 ;; *************** function _I2C_Start *****************
   446 ;; Defined at:
   447 ;;		line 33 in file "./i2c.h"
   448 ;; Parameters:    Size  Location     Type
   449 ;;  address         1    wreg     unsigned char 
   450 ;; Auto vars:     Size  Location     Type
   451 ;;  address         1    1[COMMON] unsigned char 
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      unsigned char 
   454 ;; Registers used:
   455 ;;		wreg, status,2, status,0, pclath, cstack
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   461 ;;      Params:         0       0       0       0       0
   462 ;;      Locals:         1       0       0       0       0
   463 ;;      Temps:          0       0       0       0       0
   464 ;;      Totals:         1       0       0       0       0
   465 ;;Total ram usage:        1 bytes
   466 ;; Hardware stack levels used: 1
   467 ;; Hardware stack levels required when called: 2
   468 ;; This function calls:
   469 ;;		_I2C_Wait
   470 ;;		_I2C_Write
   471 ;; This function is called by:
   472 ;;		_main
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476                           
   477                           ;psect for function _I2C_Start
   478  077D                     _I2C_Start:
   479                           
   480                           ;incstack = 0
   481                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
   482                           ;I2C_Start@address stored from wreg
   483  077D  00F1               	movwf	I2C_Start@address
   484  077E                     l709:
   485                           
   486                           ;./i2c.h: 34:     SSPCON2bits.SEN = 1;
   487  077E  1683               	bsf	3,5	;RP0=1, select bank1
   488  077F  1303               	bcf	3,6	;RP1=0, select bank1
   489  0780  1411               	bsf	17,0	;volatile
   490  0781                     l36:	
   491                           ;./i2c.h: 35:     while (SSPCON2bits.SEN);
   492                           
   493  0781  1811               	btfsc	17,0	;volatile
   494  0782  2F84               	goto	u51
   495  0783  2F85               	goto	u50
   496  0784                     u51:
   497  0784  2F81               	goto	l36
   498  0785                     u50:
   499  0785                     l38:
   500                           
   501                           ;./i2c.h: 36:     SSPIF = 0;
   502  0785  1283               	bcf	3,5	;RP0=0, select bank0
   503  0786  1303               	bcf	3,6	;RP1=0, select bank0
   504  0787  118C               	bcf	12,3	;volatile
   505                           
   506                           ;./i2c.h: 38:     if(!SSPSTATbits.S)
   507  0788  1683               	bsf	3,5	;RP0=1, select bank1
   508  0789  1303               	bcf	3,6	;RP1=0, select bank1
   509  078A  1994               	btfsc	20,3	;volatile
   510  078B  2F8D               	goto	u61
   511  078C  2F8E               	goto	u60
   512  078D                     u61:
   513  078D  2F8F               	goto	l713
   514  078E                     u60:
   515  078E  2F9A               	goto	l40
   516  078F                     l713:
   517                           
   518                           ;./i2c.h: 41:     I2C_Write(address);
   519  078F  0871               	movf	I2C_Start@address,w
   520  0790  120A  118A  2764  120A  118A  	fcall	_I2C_Write
   521  0795                     l715:
   522                           
   523                           ;./i2c.h: 42:     I2C_Wait();
   524  0795  120A  118A  274A  120A  118A  	fcall	_I2C_Wait
   525  079A                     l40:
   526  079A  0008               	return
   527  079B                     __end_of_I2C_Start:
   528                           
   529                           	psect	text3
   530  0764                     __ptext3:	
   531 ;; *************** function _I2C_Write *****************
   532 ;; Defined at:
   533 ;;		line 46 in file "./i2c.h"
   534 ;; Parameters:    Size  Location     Type
   535 ;;  data            1    wreg     unsigned char 
   536 ;; Auto vars:     Size  Location     Type
   537 ;;  data            1    0[COMMON] unsigned char 
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		wreg, status,2, status,0, pclath, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   547 ;;      Params:         0       0       0       0       0
   548 ;;      Locals:         1       0       0       0       0
   549 ;;      Temps:          0       0       0       0       0
   550 ;;      Totals:         1       0       0       0       0
   551 ;;Total ram usage:        1 bytes
   552 ;; Hardware stack levels used: 1
   553 ;; Hardware stack levels required when called: 1
   554 ;; This function calls:
   555 ;;		_I2C_Wait
   556 ;; This function is called by:
   557 ;;		_I2C_Start
   558 ;;		_main
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           
   563                           ;psect for function _I2C_Write
   564  0764                     _I2C_Write:
   565                           
   566                           ;incstack = 0
   567                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
   568                           ;I2C_Write@data stored from wreg
   569  0764  00F0               	movwf	I2C_Write@data
   570  0765                     l685:
   571                           
   572                           ;./i2c.h: 47:     SSPBUF = data;
   573  0765  0870               	movf	I2C_Write@data,w
   574  0766  1283               	bcf	3,5	;RP0=0, select bank0
   575  0767  1303               	bcf	3,6	;RP1=0, select bank0
   576  0768  0093               	movwf	19	;volatile
   577  0769                     l687:
   578                           
   579                           ;./i2c.h: 48:     I2C_Wait();
   580  0769  120A  118A  274A  120A  118A  	fcall	_I2C_Wait
   581  076E                     l43:
   582  076E  0008               	return
   583  076F                     __end_of_I2C_Write:
   584                           
   585                           	psect	text4
   586  074A                     __ptext4:	
   587 ;; *************** function _I2C_Wait *****************
   588 ;; Defined at:
   589 ;;		line 51 in file "./i2c.h"
   590 ;; Parameters:    Size  Location     Type
   591 ;;		None
   592 ;; Auto vars:     Size  Location     Type
   593 ;;		None
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      unsigned char 
   596 ;; Registers used:
   597 ;;		None
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   603 ;;      Params:         0       0       0       0       0
   604 ;;      Locals:         0       0       0       0       0
   605 ;;      Temps:          0       0       0       0       0
   606 ;;      Totals:         0       0       0       0       0
   607 ;;Total ram usage:        0 bytes
   608 ;; Hardware stack levels used: 1
   609 ;; This function calls:
   610 ;;		Nothing
   611 ;; This function is called by:
   612 ;;		_I2C_Start
   613 ;;		_I2C_Write
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           
   618                           ;psect for function _I2C_Wait
   619  074A                     _I2C_Wait:
   620  074A                     l679:	
   621                           ;incstack = 0
   622                           ; Regs used in _I2C_Wait: []
   623                           
   624  074A                     l46:	
   625                           ;./i2c.h: 52:     while (!SSPIF);
   626                           
   627  074A  1283               	bcf	3,5	;RP0=0, select bank0
   628  074B  1303               	bcf	3,6	;RP1=0, select bank0
   629  074C  1D8C               	btfss	12,3	;volatile
   630  074D  2F4F               	goto	u11
   631  074E  2F50               	goto	u10
   632  074F                     u11:
   633  074F  2F4A               	goto	l46
   634  0750                     u10:
   635  0750                     l48:
   636                           
   637                           ;./i2c.h: 53:     SSPIF = 0;
   638  0750  118C               	bcf	12,3	;volatile
   639  0751                     l50:	
   640                           ;./i2c.h: 55:     if(ACKSTAT)
   641                           
   642  0751  0008               	return
   643  0752                     __end_of_I2C_Wait:
   644                           
   645                           	psect	text5
   646  07BB                     __ptext5:	
   647 ;; *************** function _I2C_Read *****************
   648 ;; Defined at:
   649 ;;		line 71 in file "./i2c.h"
   650 ;; Parameters:    Size  Location     Type
   651 ;;  mode            1    wreg     enum E1296
   652 ;; Auto vars:     Size  Location     Type
   653 ;;  mode            1    1[COMMON] enum E1296
   654 ;;  buffer          1    2[COMMON] unsigned char 
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      unsigned char 
   657 ;; Registers used:
   658 ;;		wreg, status,2, status,0, pclath, cstack
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   664 ;;      Params:         0       0       0       0       0
   665 ;;      Locals:         2       0       0       0       0
   666 ;;      Temps:          1       0       0       0       0
   667 ;;      Totals:         3       0       0       0       0
   668 ;;Total ram usage:        3 bytes
   669 ;; Hardware stack levels used: 1
   670 ;; Hardware stack levels required when called: 1
   671 ;; This function calls:
   672 ;;		_I2C_Ack
   673 ;;		_I2C_Nack
   674 ;; This function is called by:
   675 ;;		_main
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           
   680                           ;psect for function _I2C_Read
   681  07BB                     _I2C_Read:
   682                           
   683                           ;incstack = 0
   684                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
   685                           ;I2C_Read@mode stored from wreg
   686  07BB  00F1               	movwf	I2C_Read@mode
   687  07BC                     l725:
   688  07BC                     l727:
   689                           
   690                           ;./i2c.h: 73:     SSPCON2bits.RCEN = 1;
   691  07BC  1683               	bsf	3,5	;RP0=1, select bank1
   692  07BD  1303               	bcf	3,6	;RP1=0, select bank1
   693  07BE  1591               	bsf	17,3	;volatile
   694  07BF                     l62:	
   695                           ;./i2c.h: 75:     while (!SSPSTATbits.BF);
   696                           
   697  07BF  1C14               	btfss	20,0	;volatile
   698  07C0  2FC2               	goto	u81
   699  07C1  2FC3               	goto	u80
   700  07C2                     u81:
   701  07C2  2FBF               	goto	l62
   702  07C3                     u80:
   703  07C3                     l729:
   704                           
   705                           ;./i2c.h: 76:     buffer = SSPBUF;
   706  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   707  07C4  1303               	bcf	3,6	;RP1=0, select bank0
   708  07C5  0813               	movf	19,w	;volatile
   709  07C6  00F0               	movwf	??_I2C_Read
   710  07C7  0870               	movf	??_I2C_Read,w
   711  07C8  00F2               	movwf	I2C_Read@buffer
   712  07C9                     l731:
   713                           
   714                           ;./i2c.h: 78:     if(mode == ACK) {
   715  07C9  0871               	movf	I2C_Read@mode,w
   716  07CA  1D03               	btfss	3,2
   717  07CB  2FCD               	goto	u91
   718  07CC  2FCE               	goto	u90
   719  07CD                     u91:
   720  07CD  2FD4               	goto	l735
   721  07CE                     u90:
   722  07CE                     l733:
   723                           
   724                           ;./i2c.h: 79:         I2C_Ack();
   725  07CE  120A  118A  2752  120A  118A  	fcall	_I2C_Ack
   726                           
   727                           ;./i2c.h: 80:     } else {
   728  07D3  2FD9               	goto	l737
   729  07D4                     l735:
   730                           
   731                           ;./i2c.h: 81:         I2C_Nack();
   732  07D4  120A  118A  275B  120A  118A  	fcall	_I2C_Nack
   733  07D9                     l737:
   734                           
   735                           ;./i2c.h: 84:     return buffer;
   736  07D9  0872               	movf	I2C_Read@buffer,w
   737  07DA                     l67:
   738  07DA  0008               	return
   739  07DB                     __end_of_I2C_Read:
   740                           
   741                           	psect	text6
   742  075B                     __ptext6:	
   743 ;; *************** function _I2C_Nack *****************
   744 ;; Defined at:
   745 ;;		line 93 in file "./i2c.h"
   746 ;; Parameters:    Size  Location     Type
   747 ;;		None
   748 ;; Auto vars:     Size  Location     Type
   749 ;;		None
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		None
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   759 ;;      Params:         0       0       0       0       0
   760 ;;      Locals:         0       0       0       0       0
   761 ;;      Temps:          0       0       0       0       0
   762 ;;      Totals:         0       0       0       0       0
   763 ;;Total ram usage:        0 bytes
   764 ;; Hardware stack levels used: 1
   765 ;; This function calls:
   766 ;;		Nothing
   767 ;; This function is called by:
   768 ;;		_I2C_Read
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           
   773                           ;psect for function _I2C_Nack
   774  075B                     _I2C_Nack:
   775  075B                     l691:	
   776                           ;incstack = 0
   777                           ; Regs used in _I2C_Nack: []
   778                           
   779                           
   780                           ;./i2c.h: 94:     SSPCON2bits.ACKDT = 1;
   781  075B  1683               	bsf	3,5	;RP0=1, select bank1
   782  075C  1303               	bcf	3,6	;RP1=0, select bank1
   783  075D  1691               	bsf	17,5	;volatile
   784                           
   785                           ;./i2c.h: 95:     SSPCON2bits.ACKEN = 1;
   786  075E  1611               	bsf	17,4	;volatile
   787  075F                     l76:	
   788                           ;./i2c.h: 96:     while(SSPCON2bits.ACKEN);
   789                           
   790  075F  1A11               	btfsc	17,4	;volatile
   791  0760  2F62               	goto	u31
   792  0761  2F63               	goto	u30
   793  0762                     u31:
   794  0762  2F5F               	goto	l76
   795  0763                     u30:
   796  0763                     l79:
   797  0763  0008               	return
   798  0764                     __end_of_I2C_Nack:
   799                           
   800                           	psect	text7
   801  0752                     __ptext7:	
   802 ;; *************** function _I2C_Ack *****************
   803 ;; Defined at:
   804 ;;		line 87 in file "./i2c.h"
   805 ;; Parameters:    Size  Location     Type
   806 ;;		None
   807 ;; Auto vars:     Size  Location     Type
   808 ;;		None
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		None
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   818 ;;      Params:         0       0       0       0       0
   819 ;;      Locals:         0       0       0       0       0
   820 ;;      Temps:          0       0       0       0       0
   821 ;;      Totals:         0       0       0       0       0
   822 ;;Total ram usage:        0 bytes
   823 ;; Hardware stack levels used: 1
   824 ;; This function calls:
   825 ;;		Nothing
   826 ;; This function is called by:
   827 ;;		_I2C_Read
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           
   832                           ;psect for function _I2C_Ack
   833  0752                     _I2C_Ack:
   834  0752                     l689:	
   835                           ;incstack = 0
   836                           ; Regs used in _I2C_Ack: []
   837                           
   838                           
   839                           ;./i2c.h: 88:     SSPCON2bits.ACKDT = 0;
   840  0752  1683               	bsf	3,5	;RP0=1, select bank1
   841  0753  1303               	bcf	3,6	;RP1=0, select bank1
   842  0754  1291               	bcf	17,5	;volatile
   843                           
   844                           ;./i2c.h: 89:     SSPCON2bits.ACKEN = 1;
   845  0755  1611               	bsf	17,4	;volatile
   846  0756                     l70:	
   847                           ;./i2c.h: 90:     while(SSPCON2bits.ACKEN);
   848                           
   849  0756  1A11               	btfsc	17,4	;volatile
   850  0757  2F59               	goto	u21
   851  0758  2F5A               	goto	u20
   852  0759                     u21:
   853  0759  2F56               	goto	l70
   854  075A                     u20:
   855  075A                     l73:
   856  075A  0008               	return
   857  075B                     __end_of_I2C_Ack:
   858                           
   859                           	psect	text8
   860  079B                     __ptext8:	
   861 ;; *************** function _I2C_Init *****************
   862 ;; Defined at:
   863 ;;		line 16 in file "./i2c.h"
   864 ;; Parameters:    Size  Location     Type
   865 ;;  mode            1    wreg     enum E1292
   866 ;; Auto vars:     Size  Location     Type
   867 ;;  mode            1    0[COMMON] enum E1292
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, status,2, status,0
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   877 ;;      Params:         0       0       0       0       0
   878 ;;      Locals:         1       0       0       0       0
   879 ;;      Temps:          0       0       0       0       0
   880 ;;      Totals:         1       0       0       0       0
   881 ;;Total ram usage:        1 bytes
   882 ;; Hardware stack levels used: 1
   883 ;; This function calls:
   884 ;;		Nothing
   885 ;; This function is called by:
   886 ;;		_main
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           
   891                           ;psect for function _I2C_Init
   892  079B                     _I2C_Init:
   893                           
   894                           ;incstack = 0
   895                           ; Regs used in _I2C_Init: [wreg+status,2+status,0]
   896                           ;I2C_Init@mode stored from wreg
   897  079B  00F0               	movwf	I2C_Init@mode
   898  079C                     l693:
   899                           
   900                           ;./i2c.h: 17:     TRISCbits.TRISC3 = 1;
   901  079C  1683               	bsf	3,5	;RP0=1, select bank1
   902  079D  1303               	bcf	3,6	;RP1=0, select bank1
   903  079E  1587               	bsf	7,3	;volatile
   904                           
   905                           ;./i2c.h: 18:     TRISCbits.TRISC4 = 1;
   906  079F  1607               	bsf	7,4	;volatile
   907                           
   908                           ;./i2c.h: 19:     SSPCONbits.SSPEN = 1;
   909  07A0  1283               	bcf	3,5	;RP0=0, select bank0
   910  07A1  1303               	bcf	3,6	;RP1=0, select bank0
   911  07A2  1694               	bsf	20,5	;volatile
   912  07A3                     l695:
   913                           
   914                           ;./i2c.h: 21:     if(mode == I2C_MASTER_MODE) {
   915  07A3  0870               	movf	I2C_Init@mode,w
   916  07A4  1D03               	btfss	3,2
   917  07A5  2FA7               	goto	u41
   918  07A6  2FA8               	goto	u40
   919  07A7                     u41:
   920  07A7  2FAD               	goto	l699
   921  07A8                     u40:
   922  07A8                     l697:
   923                           
   924                           ;./i2c.h: 22:         SSPCONbits.SSPM = 0x8;
   925  07A8  0814               	movf	20,w	;volatile
   926  07A9  39F0               	andlw	-16
   927  07AA  3808               	iorlw	8
   928  07AB  0094               	movwf	20	;volatile
   929                           
   930                           ;./i2c.h: 23:     } else {
   931  07AC  2FB1               	goto	l701
   932  07AD                     l699:
   933                           
   934                           ;./i2c.h: 24:         SSPCONbits.SSPM = 0x4;
   935  07AD  0814               	movf	20,w	;volatile
   936  07AE  39F0               	andlw	-16
   937  07AF  3804               	iorlw	4
   938  07B0  0094               	movwf	20	;volatile
   939  07B1                     l701:
   940                           
   941                           ;./i2c.h: 27:     SSPCON2 = 0;
   942  07B1  1683               	bsf	3,5	;RP0=1, select bank1
   943  07B2  1303               	bcf	3,6	;RP1=0, select bank1
   944  07B3  0191               	clrf	17	;volatile
   945  07B4                     l703:
   946                           
   947                           ;./i2c.h: 28:     SSPADD = 0x9;
   948  07B4  3009               	movlw	9
   949  07B5  0093               	movwf	19	;volatile
   950  07B6                     l705:
   951                           
   952                           ;./i2c.h: 29:     SSPIE=1;
   953  07B6  158C               	bsf	12,3	;volatile
   954  07B7                     l707:
   955                           
   956                           ;./i2c.h: 30:     SSPIF=0;
   957  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   958  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   959  07B9  118C               	bcf	12,3	;volatile
   960  07BA                     l33:
   961  07BA  0008               	return
   962  07BB                     __end_of_I2C_Init:
   963  007E                     btemp	set	126	;btemp
   964  007E                     wtemp0	set	126
   965                           
   966                           	psect	config
   967                           
   968                           ;Config register CONFIG1 @ 0x2007
   969                           ;	Oscillator Selection bits
   970                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   971                           ;	Watchdog Timer Enable bit
   972                           ;	WDTE = ON, WDT enabled
   973                           ;	Power-up Timer Enable bit
   974                           ;	PWRTE = OFF, PWRT disabled
   975                           ;	RE3/MCLR pin function select bit
   976                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   977                           ;	Code Protection bit
   978                           ;	CP = OFF, Program memory code protection is disabled
   979                           ;	Data Code Protection bit
   980                           ;	CPD = OFF, Data memory code protection is disabled
   981                           ;	Brown Out Reset Selection bits
   982                           ;	BOREN = ON, BOR enabled
   983                           ;	Internal External Switchover bit
   984                           ;	IESO = ON, Internal/External Switchover mode is enabled
   985                           ;	Fail-Safe Clock Monitor Enabled bit
   986                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   987                           ;	Low Voltage Programming Enable bit
   988                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
   989                           ;	In-Circuit Debugger Mode bit
   990                           ;	DEBUG = 0x1, unprogrammed default
   991  2007                     	org	8199
   992  2007  3FD9               	dw	16345
   993                           
   994                           ;Config register CONFIG2 @ 0x2008
   995                           ;	Brown-out Reset Selection bit
   996                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   997                           ;	Flash Program Memory Self Write Enable bits
   998                           ;	WRT = OFF, Write protection off
   999  2008                     	org	8200
  1000  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Read
    _I2C_Start->_I2C_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      90
                           _I2C_Init
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            1     1      0      30
                                              1 COMMON     1     1      0
                           _I2C_Wait
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             3     3      0      30
                                              0 COMMON     3     3      0
                            _I2C_Ack
                           _I2C_Nack
 ---------------------------------------------------------------------------------
 (2) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _I2C_Read
     _I2C_Ack
     _I2C_Nack
   _I2C_Start
     _I2C_Wait
     _I2C_Write
       _I2C_Wait
   _I2C_Stop
   _I2C_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Mar 13 23:07:27 2021

     __size_of_I2C_Start 001E              _SSPSTATbits 0094       __size_of_I2C_Write 000B  
                     l40 079A                       l33 07BA                       l50 0751  
                     l43 076E                       l36 0781                       l70 0756  
                     l62 07BF                       l46 074A                       l38 0785  
                     l54 0772                       l48 0750                       l56 0776  
                     l73 075A                       l58 077C                       l67 07DA  
                     l76 075F                       l79 0763                       u10 0750  
                     u11 074F                       u20 075A                       u21 0759  
                     u30 0763                       u31 0762                       u40 07A8  
                     u41 07A7                       u50 0785                       u51 0784  
                     u60 078E                       u61 078D                       u70 0776  
                     u71 0775                       u80 07C3                       u81 07C2  
                     u90 07CE                       u91 07CD                      l701 07B1  
                    l703 07B4                      l705 07B6                      l713 078F  
                    l707 07B7                      l731 07C9                      l715 0795  
                    l733 07CE                      l725 07BC                      l709 077E  
                    l741 07DB                      l735 07D4                      l727 07BC  
                    l719 076F                      l751 07F3                      l743 07DB  
                    l737 07D9                      l729 07C3                      l745 07E1  
                    l691 075B                      l747 07E7                      l693 079C  
                    l685 0765                      l749 07ED                      l695 07A3  
                    l679 074A                      l687 0769                      l697 07A8  
                    l689 0752                      l699 07AD          __end_of_I2C_Ack 075B  
                   _main 07DB         __end_of_I2C_Nack 0764         __end_of_I2C_Init 07BB  
       __end_of_I2C_Read 07DB                     btemp 007E         __end_of_I2C_Wait 0752  
       __end_of_I2C_Stop 077D                     start 0000                    ?_main 0070  
                  _SSPIE 0463                    _SSPIF 0063        __end_of_I2C_Start 079B  
      __end_of_I2C_Write 076F                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                ??_I2C_Ack 0070  
                 ??_main 0073         I2C_Start@address 0071                   _SSPADD 0093  
                 _SSPBUF 0013                ?_I2C_Nack 0070                ?_I2C_Init 0070  
              ?_I2C_Read 0070                ?_I2C_Wait 0070                ?_I2C_Stop 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               ??_I2C_Nack 0070  
             ??_I2C_Init 0070               ??_I2C_Read 0070               ??_I2C_Wait 0070  
             ??_I2C_Stop 0070             I2C_Init@mode 0070               __pmaintext 07DB  
           I2C_Read@mode 0071           I2C_Read@buffer 0072                  _I2C_Ack 0752  
                _ACKSTAT 048E                  _SSPCON2 0091                _I2C_Start 077D  
              _I2C_Write 0764                  __ptext1 076F                  __ptext2 077D  
                __ptext3 0764                  __ptext4 074A                  __ptext5 07BB  
                __ptext6 075B                  __ptext7 0752                  __ptext8 079B  
   end_of_initialization 07FC               ?_I2C_Start 0070               ?_I2C_Write 0070  
              _TRISCbits 0087        __size_of_I2C_Nack 0009        __size_of_I2C_Init 0020  
      __size_of_I2C_Read 0020        __size_of_I2C_Wait 0008        __size_of_I2C_Stop 000E  
    start_initialization 07FC              ??_I2C_Start 0071              ??_I2C_Write 0070  
               ?_I2C_Ack 0070                ___latbits 0002                 _I2C_Nack 075B  
               _I2C_Init 079B                 _I2C_Read 07BB                 _I2C_Wait 074A  
               _I2C_Stop 076F         __size_of_I2C_Ack 0009            I2C_Write@data 0070  
          __size_of_main 0021              _SSPCON2bits 0091               _SSPCONbits 0014  
