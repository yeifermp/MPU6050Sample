

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Mar 29 00:06:30 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216                           
   217                           	psect	idataBANK0
   218  05C6                     __pidataBANK0:
   219                           
   220                           ;initializer for _address
   221  05C6  3480               	retlw	128
   222  0008                     _PORTD	set	8
   223  0009                     _PORTEbits	set	9
   224  0005                     _PORTAbits	set	5
   225  0013                     _SSPBUF	set	19
   226  0014                     _SSPCONbits	set	20
   227  0063                     _SSPIF	set	99
   228  0085                     _TRISA	set	133
   229  0089                     _TRISE	set	137
   230  0088                     _TRISD	set	136
   231  0091                     _SSPCON2bits	set	145
   232  0093                     _SSPADD	set	147
   233  0091                     _SSPCON2	set	145
   234  0094                     _SSPSTATbits	set	148
   235  0094                     _SSPSTAT	set	148
   236  0087                     _TRISCbits	set	135
   237  048E                     _ACKSTAT	set	1166
   238  0463                     _SSPIE	set	1123
   239  0189                     _ANSELH	set	393
   240  0188                     _ANSEL	set	392
   241                           
   242                           	psect	cinit
   243  07EA                     start_initialization:	
   244                           ; #config settings
   245                           
   246  07EA                     __initialization:
   247                           
   248                           ; Initialize objects allocated to BANK0
   249  07EA  120A  118A  25C6  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   250  07EF  00BC               	movwf	__pdataBANK0& (0+127)
   251                           
   252                           ; Clear objects allocated to BANK0
   253  07F0  1383               	bcf	3,7	;select IRP bank0
   254  07F1  3020               	movlw	low __pbssBANK0
   255  07F2  0084               	movwf	4
   256  07F3  303C               	movlw	low (__pbssBANK0+28)
   257  07F4  120A  118A  25D7  120A  118A  	fcall	clear_ram0
   258                           
   259                           ; Clear objects allocated to COMMON
   260  07F9  01FB               	clrf	__pbssCOMMON& (0+127)
   261  07FA  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   262  07FB  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   263  07FC                     end_of_initialization:	
   264                           ;End of C runtime variable initialization code
   265                           
   266  07FC                     __end_of__initialization:
   267  07FC  0183               	clrf	3
   268  07FD  120A  118A  2F0A   	ljmp	_main	;jump to C main() function
   269                           
   270                           	psect	bssCOMMON
   271  007B                     __pbssCOMMON:
   272  007B                     _index:
   273  007B                     	ds	1
   274  007C                     _buffer:
   275  007C                     	ds	2
   276                           
   277                           	psect	bssBANK0
   278  0020                     __pbssBANK0:
   279  0020                     _gyroZ:
   280  0020                     	ds	4
   281  0024                     _gyroY:
   282  0024                     	ds	4
   283  0028                     _gyroX:
   284  0028                     	ds	4
   285  002C                     _temp:
   286  002C                     	ds	4
   287  0030                     _accelZ:
   288  0030                     	ds	4
   289  0034                     _accelY:
   290  0034                     	ds	4
   291  0038                     _accelX:
   292  0038                     	ds	4
   293                           
   294                           	psect	dataBANK0
   295  003C                     __pdataBANK0:
   296  003C                     _address:
   297  003C                     	ds	1
   298                           
   299                           	psect	clrtext
   300  05D7                     clear_ram0:	
   301                           ;	Called with FSR containing the base address, and
   302                           ;	W with the last address+1
   303                           
   304  05D7  0064               	clrwdt	;clear the watchdog before getting into this loop
   305  05D8                     clrloop0:
   306  05D8  0180               	clrf	0	;clear RAM location pointed to by FSR
   307  05D9  0A84               	incf	4,f	;increment pointer
   308  05DA  0604               	xorwf	4,w	;XOR with final address
   309  05DB  1903               	btfsc	3,2	;have we reached the end yet?
   310  05DC  3400               	retlw	0	;all done for this memory range, return
   311  05DD  0604               	xorwf	4,w	;XOR again to restore value
   312  05DE  2DD8               	goto	clrloop0	;do the next byte
   313                           
   314                           	psect	cstackCOMMON
   315  0071                     __pcstackCOMMON:
   316  0071                     ?_I2C_Write:
   317  0071                     ??_I2C_Write:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0071                     ?_I2C_Wait:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0071                     ??_I2C_Wait:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0071                     ?_GLCD_SendCommand:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0071                     ??_GLCD_SendCommand:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0071                     ?_I2C_Init:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0071                     ??_I2C_Init:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0071                     ?_I2C_Start:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0071                     ?_I2C_Stop:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0071                     ??_I2C_Stop:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0071                     ?_MPU6050_Init:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0071                     ?_GLCD_Init:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0071                     ?_GLCD_SendData:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0071                     ??_GLCD_SendData:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0071                     ?_GLCD_SetDDRAM:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0071                     ?_main:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0071                     I2C_Init@mode:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0071                     I2C_Write@data:	
   369                           ; 1 bytes @ 0x0
   370                           
   371                           
   372                           ; 1 bytes @ 0x0
   373  0071                     	ds	1
   374  0072                     ??_I2C_Start:
   375  0072                     I2C_Start@address:	
   376                           ; 1 bytes @ 0x1
   377                           
   378                           
   379                           ; 1 bytes @ 0x1
   380  0072                     	ds	1
   381  0073                     ?_MPU6050_SetRegister:
   382  0073                     MPU6050_SetRegister@value:	
   383                           ; 1 bytes @ 0x2
   384                           
   385  0073                     GLCD_SendCommand@cmd:	
   386                           ; 1 bytes @ 0x2
   387                           
   388  0073                     GLCD_SendData@data:	
   389                           ; 1 bytes @ 0x2
   390                           
   391                           
   392                           ; 1 bytes @ 0x2
   393  0073                     	ds	1
   394  0074                     ??_MPU6050_SetRegister:
   395  0074                     ??_GLCD_Init:	
   396                           ; 1 bytes @ 0x3
   397                           
   398  0074                     ??_GLCD_SetDDRAM:	
   399                           ; 1 bytes @ 0x3
   400                           
   401  0074                     GLCD_SetDDRAM@address:	
   402                           ; 1 bytes @ 0x3
   403                           
   404                           
   405                           ; 1 bytes @ 0x3
   406  0074                     	ds	1
   407  0075                     MPU6050_SetRegister@reg:
   408                           
   409                           ; 1 bytes @ 0x4
   410  0075                     	ds	1
   411  0076                     MPU6050_SetRegister@ackMode:
   412                           
   413                           ; 1 bytes @ 0x5
   414  0076                     	ds	1
   415  0077                     ??_MPU6050_Init:
   416                           
   417                           ; 1 bytes @ 0x6
   418  0077                     	ds	1
   419  0078                     ??_main:
   420                           
   421                           ; 1 bytes @ 0x7
   422  0078                     	ds	3
   423                           
   424                           	psect	maintext
   425  070A                     __pmaintext:	
   426 ;;
   427 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   428 ;;
   429 ;; *************** function _main *****************
   430 ;; Defined at:
   431 ;;		line 41 in file "main.c"
   432 ;; Parameters:    Size  Location     Type
   433 ;;		None
   434 ;; Auto vars:     Size  Location     Type
   435 ;;		None
   436 ;; Return value:  Size  Location     Type
   437 ;;                  1    wreg      void 
   438 ;; Registers used:
   439 ;;		wreg, status,2, status,0, pclath, cstack
   440 ;; Tracked objects:
   441 ;;		On entry : B00/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   445 ;;      Params:         0       0       0       0       0
   446 ;;      Locals:         0       0       0       0       0
   447 ;;      Temps:          3       0       0       0       0
   448 ;;      Totals:         3       0       0       0       0
   449 ;;Total ram usage:        3 bytes
   450 ;; Hardware stack levels required when called: 5
   451 ;; This function calls:
   452 ;;		_GLCD_Init
   453 ;;		_GLCD_SendData
   454 ;;		_GLCD_SetDDRAM
   455 ;;		_I2C_Init
   456 ;;		_MPU6050_Init
   457 ;; This function is called by:
   458 ;;		Startup code after reset
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           
   463                           ;psect for function _main
   464  070A                     _main:
   465  070A                     l1195:	
   466                           ;incstack = 0
   467                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   468                           
   469                           
   470                           ;main.c: 42:     I2C_Init(I2C_MASTER_MODE);
   471  070A  3000               	movlw	0
   472  070B  120A  118A  2674  120A  118A  	fcall	_I2C_Init
   473                           
   474                           ;main.c: 43:     MPU6050_Init();
   475  0710  120A  118A  269E  120A  118A  	fcall	_MPU6050_Init
   476                           
   477                           ;main.c: 44:     GLCD_Init();
   478  0715  120A  118A  26D1  120A  118A  	fcall	_GLCD_Init
   479  071A                     l1197:
   480                           
   481                           ;main.c: 46:     for (index = 0x40; index <= 0x4F; index++) {
   482  071A  3040               	movlw	64
   483  071B  00F8               	movwf	??_main
   484  071C  0878               	movf	??_main,w
   485  071D  00FB               	movwf	_index
   486  071E                     l1203:
   487                           
   488                           ;main.c: 47:         GLCD_SendData(index);
   489  071E  087B               	movf	_index,w
   490  071F  120A  118A  2619  120A  118A  	fcall	_GLCD_SendData
   491  0724                     l1205:
   492                           
   493                           ;main.c: 48:     }
   494  0724  3001               	movlw	1
   495  0725  00F8               	movwf	??_main
   496  0726  0878               	movf	??_main,w
   497  0727  07FB               	addwf	_index,f
   498  0728                     l1207:
   499  0728  3050               	movlw	80
   500  0729  027B               	subwf	_index,w
   501  072A  1C03               	skipc
   502  072B  2F2D               	goto	u291
   503  072C  2F2E               	goto	u290
   504  072D                     u291:
   505  072D  2F1E               	goto	l1203
   506  072E                     u290:
   507  072E                     l1209:
   508                           
   509                           ;main.c: 50:     for (index = 0x60; index <= 0x6F; index++) {
   510  072E  3060               	movlw	96
   511  072F  00F8               	movwf	??_main
   512  0730  0878               	movf	??_main,w
   513  0731  00FB               	movwf	_index
   514  0732                     l1213:
   515                           
   516                           ;main.c: 51:         GLCD_SendData(index);
   517  0732  087B               	movf	_index,w
   518  0733  120A  118A  2619  120A  118A  	fcall	_GLCD_SendData
   519  0738                     l1215:
   520                           
   521                           ;main.c: 52:     }
   522  0738  3001               	movlw	1
   523  0739  00F8               	movwf	??_main
   524  073A  0878               	movf	??_main,w
   525  073B  07FB               	addwf	_index,f
   526  073C                     l1217:
   527  073C  3070               	movlw	112
   528  073D  027B               	subwf	_index,w
   529  073E  1C03               	skipc
   530  073F  2F41               	goto	u301
   531  0740  2F42               	goto	u300
   532  0741                     u301:
   533  0741  2F32               	goto	l1213
   534  0742                     u300:
   535  0742                     l1219:
   536                           
   537                           ;main.c: 54:     for (index = 0x80; index <= 0x8F; index++) {
   538  0742  3080               	movlw	128
   539  0743  00F8               	movwf	??_main
   540  0744  0878               	movf	??_main,w
   541  0745  00FB               	movwf	_index
   542  0746                     l1223:
   543                           
   544                           ;main.c: 55:         GLCD_SendData(index);
   545  0746  087B               	movf	_index,w
   546  0747  120A  118A  2619  120A  118A  	fcall	_GLCD_SendData
   547  074C                     l1225:
   548                           
   549                           ;main.c: 56:     }
   550  074C  3001               	movlw	1
   551  074D  00F8               	movwf	??_main
   552  074E  0878               	movf	??_main,w
   553  074F  07FB               	addwf	_index,f
   554  0750                     l1227:
   555  0750  3090               	movlw	144
   556  0751  027B               	subwf	_index,w
   557  0752  1C03               	skipc
   558  0753  2F55               	goto	u311
   559  0754  2F56               	goto	u310
   560  0755                     u311:
   561  0755  2F46               	goto	l1223
   562  0756                     u310:
   563  0756                     l1229:
   564                           
   565                           ;main.c: 58:     for (index = 0xA0; index <= 0xAF; index++) {
   566  0756  30A0               	movlw	160
   567  0757  00F8               	movwf	??_main
   568  0758  0878               	movf	??_main,w
   569  0759  00FB               	movwf	_index
   570  075A                     l1233:
   571                           
   572                           ;main.c: 59:         GLCD_SendData(index);
   573  075A  087B               	movf	_index,w
   574  075B  120A  118A  2619  120A  118A  	fcall	_GLCD_SendData
   575  0760                     l1235:
   576                           
   577                           ;main.c: 60:     }
   578  0760  3001               	movlw	1
   579  0761  00F8               	movwf	??_main
   580  0762  0878               	movf	??_main,w
   581  0763  07FB               	addwf	_index,f
   582  0764                     l1237:
   583  0764  30B0               	movlw	176
   584  0765  027B               	subwf	_index,w
   585  0766  1C03               	skipc
   586  0767  2F69               	goto	u321
   587  0768  2F6A               	goto	u320
   588  0769                     u321:
   589  0769  2F5A               	goto	l1233
   590  076A                     u320:
   591  076A                     l1239:
   592                           
   593                           ;main.c: 64:         GLCD_SetDDRAM(0x80);
   594  076A  3080               	movlw	128
   595  076B  120A  118A  25C7  120A  118A  	fcall	_GLCD_SetDDRAM
   596                           
   597                           ;main.c: 65:         GLCD_SendData(index);
   598  0770  087B               	movf	_index,w
   599  0771  120A  118A  2619  120A  118A  	fcall	_GLCD_SendData
   600                           
   601                           ;main.c: 66:         GLCD_SendData(index);
   602  0776  087B               	movf	_index,w
   603  0777  120A  118A  2619  120A  118A  	fcall	_GLCD_SendData
   604  077C                     l1241:
   605                           
   606                           ;main.c: 67:         _delay((unsigned long)((500)*(4000000/4000.0)));
   607  077C  3003               	movlw	3
   608  077D  00FA               	movwf	??_main+2
   609  077E  308A               	movlw	138
   610  077F  00F9               	movwf	??_main+1
   611  0780  3055               	movlw	85
   612  0781  00F8               	movwf	??_main
   613  0782                     u337:
   614  0782  0BF8               	decfsz	??_main,f
   615  0783  2F82               	goto	u337
   616  0784  0BF9               	decfsz	??_main+1,f
   617  0785  2F82               	goto	u337
   618  0786  0BFA               	decfsz	??_main+2,f
   619  0787  2F82               	goto	u337
   620  0788  2F89               	nop2
   621  0789                     l1243:
   622                           
   623                           ;main.c: 68:         GLCD_SetDDRAM(0xB0);
   624  0789  30B0               	movlw	176
   625  078A  120A  118A  25C7  120A  118A  	fcall	_GLCD_SetDDRAM
   626  078F                     l1245:
   627                           
   628                           ;main.c: 69:         GLCD_SendData(index);
   629  078F  087B               	movf	_index,w
   630  0790  120A  118A  2619  120A  118A  	fcall	_GLCD_SendData
   631  0795                     l1247:
   632                           
   633                           ;main.c: 70:         GLCD_SendData(index);
   634  0795  087B               	movf	_index,w
   635  0796  120A  118A  2619  120A  118A  	fcall	_GLCD_SendData
   636                           
   637                           ;main.c: 71:         _delay((unsigned long)((500)*(4000000/4000.0)));
   638  079B  3003               	movlw	3
   639  079C  00FA               	movwf	??_main+2
   640  079D  308A               	movlw	138
   641  079E  00F9               	movwf	??_main+1
   642  079F  3055               	movlw	85
   643  07A0  00F8               	movwf	??_main
   644  07A1                     u347:
   645  07A1  0BF8               	decfsz	??_main,f
   646  07A2  2FA1               	goto	u347
   647  07A3  0BF9               	decfsz	??_main+1,f
   648  07A4  2FA1               	goto	u347
   649  07A5  0BFA               	decfsz	??_main+2,f
   650  07A6  2FA1               	goto	u347
   651  07A7  2FA8               	nop2
   652  07A8                     l1249:
   653                           
   654                           ;main.c: 72:         GLCD_SetDDRAM(0x98);
   655  07A8  3098               	movlw	152
   656  07A9  120A  118A  25C7  120A  118A  	fcall	_GLCD_SetDDRAM
   657  07AE                     l1251:
   658                           
   659                           ;main.c: 73:         GLCD_SendData(index);
   660  07AE  087B               	movf	_index,w
   661  07AF  120A  118A  2619  120A  118A  	fcall	_GLCD_SendData
   662  07B4                     l1253:
   663                           
   664                           ;main.c: 74:         GLCD_SendData(index);
   665  07B4  087B               	movf	_index,w
   666  07B5  120A  118A  2619  120A  118A  	fcall	_GLCD_SendData
   667  07BA                     l1255:
   668                           
   669                           ;main.c: 75:         _delay((unsigned long)((500)*(4000000/4000.0)));
   670  07BA  3003               	movlw	3
   671  07BB  00FA               	movwf	??_main+2
   672  07BC  308A               	movlw	138
   673  07BD  00F9               	movwf	??_main+1
   674  07BE  3055               	movlw	85
   675  07BF  00F8               	movwf	??_main
   676  07C0                     u357:
   677  07C0  0BF8               	decfsz	??_main,f
   678  07C1  2FC0               	goto	u357
   679  07C2  0BF9               	decfsz	??_main+1,f
   680  07C3  2FC0               	goto	u357
   681  07C4  0BFA               	decfsz	??_main+2,f
   682  07C5  2FC0               	goto	u357
   683  07C6  2FC7               	nop2
   684                           
   685                           ;main.c: 76:         GLCD_SetDDRAM(0xA8);
   686  07C7  30A8               	movlw	168
   687  07C8  120A  118A  25C7  120A  118A  	fcall	_GLCD_SetDDRAM
   688                           
   689                           ;main.c: 77:         GLCD_SendData(index);
   690  07CD  087B               	movf	_index,w
   691  07CE  120A  118A  2619  120A  118A  	fcall	_GLCD_SendData
   692                           
   693                           ;main.c: 78:         GLCD_SendData(index);
   694  07D3  087B               	movf	_index,w
   695  07D4  120A  118A  2619  120A  118A  	fcall	_GLCD_SendData
   696  07D9                     l1257:
   697                           
   698                           ;main.c: 79:         _delay((unsigned long)((500)*(4000000/4000.0)));
   699  07D9  3003               	movlw	3
   700  07DA  00FA               	movwf	??_main+2
   701  07DB  308A               	movlw	138
   702  07DC  00F9               	movwf	??_main+1
   703  07DD  3055               	movlw	85
   704  07DE  00F8               	movwf	??_main
   705  07DF                     u367:
   706  07DF  0BF8               	decfsz	??_main,f
   707  07E0  2FDF               	goto	u367
   708  07E1  0BF9               	decfsz	??_main+1,f
   709  07E2  2FDF               	goto	u367
   710  07E3  0BFA               	decfsz	??_main+2,f
   711  07E4  2FDF               	goto	u367
   712  07E5  2FE6               	nop2
   713  07E6  2F6A               	goto	l1239
   714  07E7  120A  118A  2801   	ljmp	start
   715  07EA                     __end_of_main:
   716                           
   717                           	psect	text1
   718  069E                     __ptext1:	
   719 ;; *************** function _MPU6050_Init *****************
   720 ;; Defined at:
   721 ;;		line 38 in file "./MPU6050.h"
   722 ;; Parameters:    Size  Location     Type
   723 ;;		None
   724 ;; Auto vars:     Size  Location     Type
   725 ;;		None
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      void 
   728 ;; Registers used:
   729 ;;		wreg, status,2, status,0, pclath, cstack
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   735 ;;      Params:         0       0       0       0       0
   736 ;;      Locals:         0       0       0       0       0
   737 ;;      Temps:          1       0       0       0       0
   738 ;;      Totals:         1       0       0       0       0
   739 ;;Total ram usage:        1 bytes
   740 ;; Hardware stack levels used: 1
   741 ;; Hardware stack levels required when called: 4
   742 ;; This function calls:
   743 ;;		_MPU6050_SetRegister
   744 ;; This function is called by:
   745 ;;		_main
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           
   750                           ;psect for function _MPU6050_Init
   751  069E                     _MPU6050_Init:
   752  069E                     l1193:	
   753                           ;incstack = 0
   754                           ; Regs used in _MPU6050_Init: [wreg+status,2+status,0+pclath+cstack]
   755                           
   756                           
   757                           ;./MPU6050.h: 39:     MPU6050_SetRegister(0x19, 0x07);
   758  069E  3007               	movlw	7
   759  069F  00F7               	movwf	??_MPU6050_Init
   760  06A0  0877               	movf	??_MPU6050_Init,w
   761  06A1  00F3               	movwf	MPU6050_SetRegister@value
   762  06A2  3019               	movlw	25
   763  06A3  120A  118A  264B  120A  118A  	fcall	_MPU6050_SetRegister
   764                           
   765                           ;./MPU6050.h: 40:     MPU6050_SetRegister(0x6B, 0x01);
   766  06A8  01F3               	clrf	MPU6050_SetRegister@value
   767  06A9  0AF3               	incf	MPU6050_SetRegister@value,f
   768  06AA  306B               	movlw	107
   769  06AB  120A  118A  264B  120A  118A  	fcall	_MPU6050_SetRegister
   770                           
   771                           ;./MPU6050.h: 41:     MPU6050_SetRegister(0x1A, 0x00);
   772  06B0  01F3               	clrf	MPU6050_SetRegister@value
   773  06B1  301A               	movlw	26
   774  06B2  120A  118A  264B  120A  118A  	fcall	_MPU6050_SetRegister
   775                           
   776                           ;./MPU6050.h: 42:     MPU6050_SetRegister(0x1C, 0x00);
   777  06B7  01F3               	clrf	MPU6050_SetRegister@value
   778  06B8  301C               	movlw	28
   779  06B9  120A  118A  264B  120A  118A  	fcall	_MPU6050_SetRegister
   780                           
   781                           ;./MPU6050.h: 43:     MPU6050_SetRegister(0x1B, 0x18);
   782  06BE  3018               	movlw	24
   783  06BF  00F7               	movwf	??_MPU6050_Init
   784  06C0  0877               	movf	??_MPU6050_Init,w
   785  06C1  00F3               	movwf	MPU6050_SetRegister@value
   786  06C2  301B               	movlw	27
   787  06C3  120A  118A  264B  120A  118A  	fcall	_MPU6050_SetRegister
   788                           
   789                           ;./MPU6050.h: 44:     MPU6050_SetRegister(0x38, 0x01);
   790  06C8  01F3               	clrf	MPU6050_SetRegister@value
   791  06C9  0AF3               	incf	MPU6050_SetRegister@value,f
   792  06CA  3038               	movlw	56
   793  06CB  120A  118A  264B  120A  118A  	fcall	_MPU6050_SetRegister
   794  06D0                     l121:
   795  06D0  0008               	return
   796  06D1                     __end_of_MPU6050_Init:
   797                           
   798                           	psect	text2
   799  064B                     __ptext2:	
   800 ;; *************** function _MPU6050_SetRegister *****************
   801 ;; Defined at:
   802 ;;		line 47 in file "./MPU6050.h"
   803 ;; Parameters:    Size  Location     Type
   804 ;;  reg             1    wreg     unsigned char 
   805 ;;  value           1    2[COMMON] unsigned char 
   806 ;; Auto vars:     Size  Location     Type
   807 ;;  reg             1    4[COMMON] unsigned char 
   808 ;;  ackMode         1    5[COMMON] enum E1561
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		wreg, status,2, status,0, pclath, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   818 ;;      Params:         1       0       0       0       0
   819 ;;      Locals:         2       0       0       0       0
   820 ;;      Temps:          1       0       0       0       0
   821 ;;      Totals:         4       0       0       0       0
   822 ;;Total ram usage:        4 bytes
   823 ;; Hardware stack levels used: 1
   824 ;; Hardware stack levels required when called: 3
   825 ;; This function calls:
   826 ;;		_I2C_Start
   827 ;;		_I2C_Stop
   828 ;;		_I2C_Write
   829 ;; This function is called by:
   830 ;;		_MPU6050_Init
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           
   835                           ;psect for function _MPU6050_SetRegister
   836  064B                     _MPU6050_SetRegister:
   837                           
   838                           ;incstack = 0
   839                           ; Regs used in _MPU6050_SetRegister: [wreg+status,2+status,0+pclath+cstack]
   840                           ;MPU6050_SetRegister@reg stored from wreg
   841  064B  00F5               	movwf	MPU6050_SetRegister@reg
   842  064C                     l1181:
   843  064C                     l1183:
   844                           
   845                           ;./MPU6050.h: 50:     ackMode = I2C_Start(0xD2);
   846  064C  30D2               	movlw	210
   847  064D  120A  118A  2631  120A  118A  	fcall	_I2C_Start
   848  0652  00F4               	movwf	??_MPU6050_SetRegister
   849  0653  0874               	movf	??_MPU6050_SetRegister,w
   850  0654  00F6               	movwf	MPU6050_SetRegister@ackMode
   851  0655                     l1185:
   852                           
   853                           ;./MPU6050.h: 52:     if (ackMode == ACK) {
   854  0655  0876               	movf	MPU6050_SetRegister@ackMode,w
   855  0656  1D03               	btfss	3,2
   856  0657  2E59               	goto	u271
   857  0658  2E5A               	goto	u270
   858  0659                     u271:
   859  0659  2E6E               	goto	l124
   860  065A                     u270:
   861  065A                     l1187:
   862                           
   863                           ;./MPU6050.h: 53:         ackMode = I2C_Write(reg);
   864  065A  0875               	movf	MPU6050_SetRegister@reg,w
   865  065B  120A  118A  25ED  120A  118A  	fcall	_I2C_Write
   866  0660  00F4               	movwf	??_MPU6050_SetRegister
   867  0661  0874               	movf	??_MPU6050_SetRegister,w
   868  0662  00F6               	movwf	MPU6050_SetRegister@ackMode
   869  0663                     l1189:
   870                           
   871                           ;./MPU6050.h: 55:         if (ackMode == ACK) {
   872  0663  0876               	movf	MPU6050_SetRegister@ackMode,w
   873  0664  1D03               	btfss	3,2
   874  0665  2E67               	goto	u281
   875  0666  2E68               	goto	u280
   876  0667                     u281:
   877  0667  2E6E               	goto	l124
   878  0668                     u280:
   879  0668                     l1191:
   880  0668  0873               	movf	MPU6050_SetRegister@value,w
   881  0669  120A  118A  25ED  120A  118A  	fcall	_I2C_Write
   882  066E                     l124:	
   883                           ;./MPU6050.h: 58:     }
   884                           
   885                           
   886                           ;./MPU6050.h: 60:     I2C_Stop();
   887  066E  120A  118A  25DF  120A  118A  	fcall	_I2C_Stop
   888  0673                     l126:
   889  0673  0008               	return
   890  0674                     __end_of_MPU6050_SetRegister:
   891                           
   892                           	psect	text3
   893  05DF                     __ptext3:	
   894 ;; *************** function _I2C_Stop *****************
   895 ;; Defined at:
   896 ;;		line 74 in file "./i2c.h"
   897 ;; Parameters:    Size  Location     Type
   898 ;;		None
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      unsigned char 
   903 ;; Registers used:
   904 ;;		wreg
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   910 ;;      Params:         0       0       0       0       0
   911 ;;      Locals:         0       0       0       0       0
   912 ;;      Temps:          0       0       0       0       0
   913 ;;      Totals:         0       0       0       0       0
   914 ;;Total ram usage:        0 bytes
   915 ;; Hardware stack levels used: 1
   916 ;; This function calls:
   917 ;;		Nothing
   918 ;; This function is called by:
   919 ;;		_MPU6050_SetRegister
   920 ;;		_MPU6050_ReadRegister
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           
   925                           ;psect for function _I2C_Stop
   926  05DF                     _I2C_Stop:
   927  05DF                     l871:	
   928                           ;incstack = 0
   929                           ; Regs used in _I2C_Stop: [wreg]
   930                           
   931                           
   932                           ;./i2c.h: 75:     SSPCON2bits.PEN = 1;
   933  05DF  1683               	bsf	3,5	;RP0=1, select bank1
   934  05E0  1303               	bcf	3,6	;RP1=0, select bank1
   935  05E1  1511               	bsf	17,2	;volatile
   936  05E2                     l91:	
   937                           ;./i2c.h: 76:     while(SSPCON2bits.PEN);
   938                           
   939  05E2  1911               	btfsc	17,2	;volatile
   940  05E3  2DE5               	goto	u51
   941  05E4  2DE6               	goto	u50
   942  05E5                     u51:
   943  05E5  2DE2               	goto	l91
   944  05E6                     u50:
   945  05E6                     l93:
   946                           
   947                           ;./i2c.h: 77:     SSPIF = 0;
   948  05E6  1283               	bcf	3,5	;RP0=0, select bank0
   949  05E7  1303               	bcf	3,6	;RP1=0, select bank0
   950  05E8  118C               	bcf	12,3	;volatile
   951                           
   952                           ;./i2c.h: 78:     if (SSPSTATbits.P)
   953  05E9  1683               	bsf	3,5	;RP0=1, select bank1
   954  05EA  1303               	bcf	3,6	;RP1=0, select bank1
   955  05EB  0814               	movf	20,w	;volatile
   956  05EC                     l95:
   957  05EC  0008               	return
   958  05ED                     __end_of_I2C_Stop:
   959                           
   960                           	psect	text4
   961  0631                     __ptext4:	
   962 ;; *************** function _I2C_Start *****************
   963 ;; Defined at:
   964 ;;		line 36 in file "./i2c.h"
   965 ;; Parameters:    Size  Location     Type
   966 ;;  address         1    wreg     unsigned char 
   967 ;; Auto vars:     Size  Location     Type
   968 ;;  address         1    1[COMMON] unsigned char 
   969 ;; Return value:  Size  Location     Type
   970 ;;                  1    wreg      enum E1561
   971 ;; Registers used:
   972 ;;		wreg, status,2, status,0, pclath, cstack
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   978 ;;      Params:         0       0       0       0       0
   979 ;;      Locals:         1       0       0       0       0
   980 ;;      Temps:          0       0       0       0       0
   981 ;;      Totals:         1       0       0       0       0
   982 ;;Total ram usage:        1 bytes
   983 ;; Hardware stack levels used: 1
   984 ;; Hardware stack levels required when called: 2
   985 ;; This function calls:
   986 ;;		_I2C_Write
   987 ;; This function is called by:
   988 ;;		_MPU6050_SetRegister
   989 ;;		_MPU6050_ReadRegister
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           
   994                           ;psect for function _I2C_Start
   995  0631                     _I2C_Start:
   996                           
   997                           ;incstack = 0
   998                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
   999                           ;I2C_Start@address stored from wreg
  1000  0631  00F2               	movwf	I2C_Start@address
  1001  0632                     l861:
  1002                           
  1003                           ;./i2c.h: 37:     SSPCON2bits.SEN = 1;
  1004  0632  1683               	bsf	3,5	;RP0=1, select bank1
  1005  0633  1303               	bcf	3,6	;RP1=0, select bank1
  1006  0634  1411               	bsf	17,0	;volatile
  1007  0635                     l66:	
  1008                           ;./i2c.h: 38:     while (SSPCON2bits.SEN);
  1009                           
  1010  0635  1811               	btfsc	17,0	;volatile
  1011  0636  2E38               	goto	u31
  1012  0637  2E39               	goto	u30
  1013  0638                     u31:
  1014  0638  2E35               	goto	l66
  1015  0639                     u30:
  1016  0639                     l68:
  1017                           
  1018                           ;./i2c.h: 39:     SSPIF = 0;
  1019  0639  1283               	bcf	3,5	;RP0=0, select bank0
  1020  063A  1303               	bcf	3,6	;RP1=0, select bank0
  1021  063B  118C               	bcf	12,3	;volatile
  1022                           
  1023                           ;./i2c.h: 41:     if(!SSPSTATbits.S)
  1024  063C  1683               	bsf	3,5	;RP0=1, select bank1
  1025  063D  1303               	bcf	3,6	;RP1=0, select bank1
  1026  063E  1994               	btfsc	20,3	;volatile
  1027  063F  2E41               	goto	u41
  1028  0640  2E42               	goto	u40
  1029  0641                     u41:
  1030  0641  2E44               	goto	l867
  1031  0642                     u40:
  1032  0642                     l863:
  1033                           
  1034                           ;./i2c.h: 42:         return 1;
  1035  0642  3001               	movlw	1
  1036  0643  2E4A               	goto	l70
  1037  0644                     l867:
  1038                           
  1039                           ;./i2c.h: 44:     return I2C_Write(address);
  1040  0644  0872               	movf	I2C_Start@address,w
  1041  0645  120A  118A  25ED  120A  118A  	fcall	_I2C_Write
  1042  064A                     l70:
  1043  064A  0008               	return
  1044  064B                     __end_of_I2C_Start:
  1045                           
  1046                           	psect	text5
  1047  05ED                     __ptext5:	
  1048 ;; *************** function _I2C_Write *****************
  1049 ;; Defined at:
  1050 ;;		line 59 in file "./i2c.h"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;  data            1    wreg     unsigned char 
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;  data            1    0[COMMON] unsigned char 
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  1    wreg      enum E1561
  1057 ;; Registers used:
  1058 ;;		wreg, status,2, status,0, pclath, cstack
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1064 ;;      Params:         0       0       0       0       0
  1065 ;;      Locals:         1       0       0       0       0
  1066 ;;      Temps:          0       0       0       0       0
  1067 ;;      Totals:         1       0       0       0       0
  1068 ;;Total ram usage:        1 bytes
  1069 ;; Hardware stack levels used: 1
  1070 ;; Hardware stack levels required when called: 1
  1071 ;; This function calls:
  1072 ;;		_I2C_Wait
  1073 ;; This function is called by:
  1074 ;;		_I2C_Start
  1075 ;;		_MPU6050_SetRegister
  1076 ;;		_I2C_RepeatedStart
  1077 ;;		_MPU6050_ReadRegister
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           
  1082                           ;psect for function _I2C_Write
  1083  05ED                     _I2C_Write:
  1084                           
  1085                           ;incstack = 0
  1086                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  1087                           ;I2C_Write@data stored from wreg
  1088  05ED  00F1               	movwf	I2C_Write@data
  1089  05EE                     l845:
  1090                           
  1091                           ;./i2c.h: 60:     SSPBUF = data;
  1092  05EE  0871               	movf	I2C_Write@data,w
  1093  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  1094  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  1095  05F1  0093               	movwf	19	;volatile
  1096  05F2                     l847:
  1097                           
  1098                           ;./i2c.h: 61:     I2C_Wait();
  1099  05F2  120A  118A  25CF  120A  118A  	fcall	_I2C_Wait
  1100  05F7                     l849:
  1101                           
  1102                           ;./i2c.h: 63:     if(ACKSTAT)
  1103  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  1104  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  1105  05F9  1F11               	btfss	17,6	;volatile
  1106  05FA  2DFC               	goto	u21
  1107  05FB  2DFD               	goto	u20
  1108  05FC                     u21:
  1109  05FC  2DFF               	goto	l857
  1110  05FD                     u20:
  1111  05FD                     l851:
  1112                           
  1113                           ;./i2c.h: 64:         return NACK;
  1114  05FD  3001               	movlw	1
  1115  05FE  2E00               	goto	l81
  1116  05FF                     l857:
  1117                           
  1118                           ;./i2c.h: 66:         return ACK;
  1119  05FF  3000               	movlw	0
  1120  0600                     l81:
  1121  0600  0008               	return
  1122  0601                     __end_of_I2C_Write:
  1123                           
  1124                           	psect	text6
  1125  05CF                     __ptext6:	
  1126 ;; *************** function _I2C_Wait *****************
  1127 ;; Defined at:
  1128 ;;		line 69 in file "./i2c.h"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;		None
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;		None
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      void 
  1135 ;; Registers used:
  1136 ;;		None
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1142 ;;      Params:         0       0       0       0       0
  1143 ;;      Locals:         0       0       0       0       0
  1144 ;;      Temps:          0       0       0       0       0
  1145 ;;      Totals:         0       0       0       0       0
  1146 ;;Total ram usage:        0 bytes
  1147 ;; Hardware stack levels used: 1
  1148 ;; This function calls:
  1149 ;;		Nothing
  1150 ;; This function is called by:
  1151 ;;		_I2C_Write
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           
  1156                           ;psect for function _I2C_Wait
  1157  05CF                     _I2C_Wait:
  1158  05CF                     l843:	
  1159                           ;incstack = 0
  1160                           ; Regs used in _I2C_Wait: []
  1161                           
  1162  05CF                     l85:	
  1163                           ;./i2c.h: 70:     while (!SSPIF);
  1164                           
  1165  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  1166  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  1167  05D1  1D8C               	btfss	12,3	;volatile
  1168  05D2  2DD4               	goto	u11
  1169  05D3  2DD5               	goto	u10
  1170  05D4                     u11:
  1171  05D4  2DCF               	goto	l85
  1172  05D5                     u10:
  1173  05D5                     l87:
  1174                           
  1175                           ;./i2c.h: 71:     SSPIF = 0;
  1176  05D5  118C               	bcf	12,3	;volatile
  1177  05D6                     l88:
  1178  05D6  0008               	return
  1179  05D7                     __end_of_I2C_Wait:
  1180                           
  1181                           	psect	text7
  1182  0674                     __ptext7:	
  1183 ;; *************** function _I2C_Init *****************
  1184 ;; Defined at:
  1185 ;;		line 17 in file "./i2c.h"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  mode            1    wreg     enum E1557
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  mode            1    0[COMMON] enum E1557
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		wreg, status,2, status,0
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1199 ;;      Params:         0       0       0       0       0
  1200 ;;      Locals:         1       0       0       0       0
  1201 ;;      Temps:          0       0       0       0       0
  1202 ;;      Totals:         1       0       0       0       0
  1203 ;;Total ram usage:        1 bytes
  1204 ;; Hardware stack levels used: 1
  1205 ;; This function calls:
  1206 ;;		Nothing
  1207 ;; This function is called by:
  1208 ;;		_main
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           
  1213                           ;psect for function _I2C_Init
  1214  0674                     _I2C_Init:
  1215                           
  1216                           ;incstack = 0
  1217                           ; Regs used in _I2C_Init: [wreg+status,2+status,0]
  1218                           ;I2C_Init@mode stored from wreg
  1219  0674  00F1               	movwf	I2C_Init@mode
  1220  0675                     l933:
  1221                           
  1222                           ;./i2c.h: 18:     TRISCbits.TRISC3 = 1;
  1223  0675  1683               	bsf	3,5	;RP0=1, select bank1
  1224  0676  1303               	bcf	3,6	;RP1=0, select bank1
  1225  0677  1587               	bsf	7,3	;volatile
  1226                           
  1227                           ;./i2c.h: 19:     TRISCbits.TRISC4 = 1;
  1228  0678  1607               	bsf	7,4	;volatile
  1229                           
  1230                           ;./i2c.h: 20:     SSPCONbits.SSPEN = 1;
  1231  0679  1283               	bcf	3,5	;RP0=0, select bank0
  1232  067A  1303               	bcf	3,6	;RP1=0, select bank0
  1233  067B  1694               	bsf	20,5	;volatile
  1234  067C                     l935:
  1235                           
  1236                           ;./i2c.h: 21:     SSPSTAT = 0;
  1237  067C  1683               	bsf	3,5	;RP0=1, select bank1
  1238  067D  1303               	bcf	3,6	;RP1=0, select bank1
  1239  067E  0194               	clrf	20	;volatile
  1240  067F                     l937:
  1241                           
  1242                           ;./i2c.h: 22:     SSPSTATbits.SMP = 1;
  1243  067F  1794               	bsf	20,7	;volatile
  1244  0680                     l939:
  1245                           
  1246                           ;./i2c.h: 24:     if(mode == I2C_MASTER_MODE) {
  1247  0680  0871               	movf	I2C_Init@mode,w
  1248  0681  1D03               	btfss	3,2
  1249  0682  2E84               	goto	u141
  1250  0683  2E85               	goto	u140
  1251  0684                     u141:
  1252  0684  2E8C               	goto	l943
  1253  0685                     u140:
  1254  0685                     l941:
  1255                           
  1256                           ;./i2c.h: 25:         SSPCONbits.SSPM = 0x8;
  1257  0685  1283               	bcf	3,5	;RP0=0, select bank0
  1258  0686  1303               	bcf	3,6	;RP1=0, select bank0
  1259  0687  0814               	movf	20,w	;volatile
  1260  0688  39F0               	andlw	-16
  1261  0689  3808               	iorlw	8
  1262  068A  0094               	movwf	20	;volatile
  1263                           
  1264                           ;./i2c.h: 26:     } else {
  1265  068B  2E92               	goto	l945
  1266  068C                     l943:
  1267                           
  1268                           ;./i2c.h: 27:         SSPCONbits.SSPM = 0x4;
  1269  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1270  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1271  068E  0814               	movf	20,w	;volatile
  1272  068F  39F0               	andlw	-16
  1273  0690  3804               	iorlw	4
  1274  0691  0094               	movwf	20	;volatile
  1275  0692                     l945:
  1276                           
  1277                           ;./i2c.h: 30:     SSPCON2 = 0;
  1278  0692  1683               	bsf	3,5	;RP0=1, select bank1
  1279  0693  1303               	bcf	3,6	;RP1=0, select bank1
  1280  0694  0191               	clrf	17	;volatile
  1281  0695                     l947:
  1282                           
  1283                           ;./i2c.h: 31:     SSPADD = 0x9;
  1284  0695  3009               	movlw	9
  1285  0696  0093               	movwf	19	;volatile
  1286  0697                     l949:
  1287                           
  1288                           ;./i2c.h: 32:     SSPIF=0;
  1289  0697  1283               	bcf	3,5	;RP0=0, select bank0
  1290  0698  1303               	bcf	3,6	;RP1=0, select bank0
  1291  0699  118C               	bcf	12,3	;volatile
  1292  069A                     l951:
  1293                           
  1294                           ;./i2c.h: 33:     SSPIE=1;
  1295  069A  1683               	bsf	3,5	;RP0=1, select bank1
  1296  069B  1303               	bcf	3,6	;RP1=0, select bank1
  1297  069C  158C               	bsf	12,3	;volatile
  1298  069D                     l63:
  1299  069D  0008               	return
  1300  069E                     __end_of_I2C_Init:
  1301                           
  1302                           	psect	text8
  1303  05C7                     __ptext8:	
  1304 ;; *************** function _GLCD_SetDDRAM *****************
  1305 ;; Defined at:
  1306 ;;		line 80 in file "./GLCD.h"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;  address         1    wreg     unsigned char 
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;  address         1    3[COMMON] unsigned char 
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      void 
  1313 ;; Registers used:
  1314 ;;		wreg, status,2, status,0, pclath, cstack
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1320 ;;      Params:         0       0       0       0       0
  1321 ;;      Locals:         1       0       0       0       0
  1322 ;;      Temps:          0       0       0       0       0
  1323 ;;      Totals:         1       0       0       0       0
  1324 ;;Total ram usage:        1 bytes
  1325 ;; Hardware stack levels used: 1
  1326 ;; Hardware stack levels required when called: 1
  1327 ;; This function calls:
  1328 ;;		_GLCD_SendCommand
  1329 ;; This function is called by:
  1330 ;;		_main
  1331 ;;		_GLCD_FirstLine
  1332 ;;		_GLCD_SecondLine
  1333 ;;		_GLCD_ThirdLine
  1334 ;;		_GLCD_FourthLine
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           
  1339                           ;psect for function _GLCD_SetDDRAM
  1340  05C7                     _GLCD_SetDDRAM:
  1341                           
  1342                           ;incstack = 0
  1343                           ; Regs used in _GLCD_SetDDRAM: [wreg+status,2+status,0+pclath+cstack]
  1344                           ;GLCD_SetDDRAM@address stored from wreg
  1345  05C7  00F4               	movwf	GLCD_SetDDRAM@address
  1346  05C8                     l1023:
  1347                           
  1348                           ;./GLCD.h: 81:     GLCD_SendCommand(address);
  1349  05C8  0874               	movf	GLCD_SetDDRAM@address,w
  1350  05C9  120A  118A  2601  120A  118A  	fcall	_GLCD_SendCommand
  1351  05CE                     l178:
  1352  05CE  0008               	return
  1353  05CF                     __end_of_GLCD_SetDDRAM:
  1354                           
  1355                           	psect	text9
  1356  0619                     __ptext9:	
  1357 ;; *************** function _GLCD_SendData *****************
  1358 ;; Defined at:
  1359 ;;		line 64 in file "./GLCD.h"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;  data            1    wreg     unsigned char 
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;  data            1    2[COMMON] unsigned char 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  1    wreg      void 
  1366 ;; Registers used:
  1367 ;;		wreg, status,2
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1373 ;;      Params:         0       0       0       0       0
  1374 ;;      Locals:         1       0       0       0       0
  1375 ;;      Temps:          2       0       0       0       0
  1376 ;;      Totals:         3       0       0       0       0
  1377 ;;Total ram usage:        3 bytes
  1378 ;; Hardware stack levels used: 1
  1379 ;; This function calls:
  1380 ;;		Nothing
  1381 ;; This function is called by:
  1382 ;;		_main
  1383 ;;		_GLCD_SendBuffer
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           
  1388                           ;psect for function _GLCD_SendData
  1389  0619                     _GLCD_SendData:
  1390                           
  1391                           ;incstack = 0
  1392                           ; Regs used in _GLCD_SendData: [wreg+status,2]
  1393                           ;GLCD_SendData@data stored from wreg
  1394  0619  00F3               	movwf	GLCD_SendData@data
  1395  061A                     l1009:
  1396                           
  1397                           ;./GLCD.h: 65:     TRISD = 0x0;
  1398  061A  1683               	bsf	3,5	;RP0=1, select bank1
  1399  061B  1303               	bcf	3,6	;RP1=0, select bank1
  1400  061C  0188               	clrf	8	;volatile
  1401  061D                     l1011:
  1402                           
  1403                           ;./GLCD.h: 66:     PORTEbits.RE0 = 1;
  1404  061D  1283               	bcf	3,5	;RP0=0, select bank0
  1405  061E  1303               	bcf	3,6	;RP1=0, select bank0
  1406  061F  1409               	bsf	9,0	;volatile
  1407  0620                     l1013:
  1408                           
  1409                           ;./GLCD.h: 67:     PORTEbits.RE1 = 0;
  1410  0620  1089               	bcf	9,1	;volatile
  1411  0621                     l1015:
  1412                           
  1413                           ;./GLCD.h: 68:     PORTD = data;
  1414  0621  0873               	movf	GLCD_SendData@data,w
  1415  0622  0088               	movwf	8	;volatile
  1416  0623                     l1017:
  1417                           
  1418                           ;./GLCD.h: 69:     PORTEbits.RE2 = 1;
  1419  0623  1509               	bsf	9,2	;volatile
  1420  0624                     l1019:
  1421                           
  1422                           ;./GLCD.h: 70:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1423  0624  300D               	movlw	13
  1424  0625  00F2               	movwf	??_GLCD_SendData+1
  1425  0626  30FB               	movlw	251
  1426  0627  00F1               	movwf	??_GLCD_SendData
  1427  0628                     u377:
  1428  0628  0BF1               	decfsz	??_GLCD_SendData,f
  1429  0629  2E28               	goto	u377
  1430  062A  0BF2               	decfsz	??_GLCD_SendData+1,f
  1431  062B  2E28               	goto	u377
  1432  062C  2E2D               	nop2
  1433  062D                     l1021:
  1434                           
  1435                           ;./GLCD.h: 71:     PORTEbits.RE2 = 0;
  1436  062D  1283               	bcf	3,5	;RP0=0, select bank0
  1437  062E  1303               	bcf	3,6	;RP1=0, select bank0
  1438  062F  1109               	bcf	9,2	;volatile
  1439  0630                     l169:
  1440  0630  0008               	return
  1441  0631                     __end_of_GLCD_SendData:
  1442                           
  1443                           	psect	text10
  1444  06D1                     __ptext10:	
  1445 ;; *************** function _GLCD_Init *****************
  1446 ;; Defined at:
  1447 ;;		line 35 in file "./GLCD.h"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;		None
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		wreg, status,2, status,0, pclath, cstack
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1461 ;;      Params:         0       0       0       0       0
  1462 ;;      Locals:         0       0       0       0       0
  1463 ;;      Temps:          3       0       0       0       0
  1464 ;;      Totals:         3       0       0       0       0
  1465 ;;Total ram usage:        3 bytes
  1466 ;; Hardware stack levels used: 1
  1467 ;; Hardware stack levels required when called: 1
  1468 ;; This function calls:
  1469 ;;		_GLCD_SendCommand
  1470 ;; This function is called by:
  1471 ;;		_main
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           
  1476                           ;psect for function _GLCD_Init
  1477  06D1                     _GLCD_Init:
  1478  06D1                     l991:	
  1479                           ;incstack = 0
  1480                           ; Regs used in _GLCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1481                           
  1482                           
  1483                           ;./GLCD.h: 36:     ANSEL = ANSELH = 0;
  1484  06D1  1683               	bsf	3,5	;RP0=1, select bank3
  1485  06D2  1703               	bsf	3,6	;RP1=1, select bank3
  1486  06D3  0189               	clrf	9	;volatile
  1487  06D4  0188               	clrf	8	;volatile
  1488                           
  1489                           ;./GLCD.h: 37:     TRISD = 0x0;
  1490  06D5  1683               	bsf	3,5	;RP0=1, select bank1
  1491  06D6  1303               	bcf	3,6	;RP1=0, select bank1
  1492  06D7  0188               	clrf	8	;volatile
  1493                           
  1494                           ;./GLCD.h: 38:     TRISE = 0x0;
  1495  06D8  0189               	clrf	9	;volatile
  1496                           
  1497                           ;./GLCD.h: 39:     TRISA = 0x0;
  1498  06D9  0185               	clrf	5	;volatile
  1499  06DA                     l993:
  1500                           
  1501                           ;./GLCD.h: 41:     PORTAbits.RA5 = 1;
  1502  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  1503  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  1504  06DC  1685               	bsf	5,5	;volatile
  1505  06DD                     l995:
  1506                           
  1507                           ;./GLCD.h: 42:     PORTAbits.RA4 = 1;
  1508  06DD  1605               	bsf	5,4	;volatile
  1509  06DE                     l997:
  1510                           
  1511                           ;./GLCD.h: 43:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1512  06DE  3003               	movlw	3
  1513  06DF  00F6               	movwf	??_GLCD_Init+2
  1514  06E0  308A               	movlw	138
  1515  06E1  00F5               	movwf	??_GLCD_Init+1
  1516  06E2  3055               	movlw	85
  1517  06E3  00F4               	movwf	??_GLCD_Init
  1518  06E4                     u387:
  1519  06E4  0BF4               	decfsz	??_GLCD_Init,f
  1520  06E5  2EE4               	goto	u387
  1521  06E6  0BF5               	decfsz	??_GLCD_Init+1,f
  1522  06E7  2EE4               	goto	u387
  1523  06E8  0BF6               	decfsz	??_GLCD_Init+2,f
  1524  06E9  2EE4               	goto	u387
  1525  06EA  2EEB               	nop2
  1526  06EB                     l999:
  1527                           
  1528                           ;./GLCD.h: 44:     GLCD_SendCommand(0x30);
  1529  06EB  3030               	movlw	48
  1530  06EC  120A  118A  2601  120A  118A  	fcall	_GLCD_SendCommand
  1531  06F1                     l1001:
  1532                           
  1533                           ;./GLCD.h: 45:     GLCD_SendCommand(0x30);
  1534  06F1  3030               	movlw	48
  1535  06F2  120A  118A  2601  120A  118A  	fcall	_GLCD_SendCommand
  1536  06F7                     l1003:
  1537                           
  1538                           ;./GLCD.h: 46:     GLCD_SendCommand(0xf);
  1539  06F7  300F               	movlw	15
  1540  06F8  120A  118A  2601  120A  118A  	fcall	_GLCD_SendCommand
  1541  06FD                     l1005:
  1542                           
  1543                           ;./GLCD.h: 47:     GLCD_SendCommand(0x1);
  1544  06FD  3001               	movlw	1
  1545  06FE  120A  118A  2601  120A  118A  	fcall	_GLCD_SendCommand
  1546  0703                     l1007:
  1547                           
  1548                           ;./GLCD.h: 48:     GLCD_SendCommand(0x10);
  1549  0703  3010               	movlw	16
  1550  0704  120A  118A  2601  120A  118A  	fcall	_GLCD_SendCommand
  1551  0709                     l163:
  1552  0709  0008               	return
  1553  070A                     __end_of_GLCD_Init:
  1554                           
  1555                           	psect	text11
  1556  0601                     __ptext11:	
  1557 ;; *************** function _GLCD_SendCommand *****************
  1558 ;; Defined at:
  1559 ;;		line 54 in file "./GLCD.h"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;  cmd             1    wreg     unsigned char 
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;  cmd             1    2[COMMON] unsigned char 
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  1    wreg      void 
  1566 ;; Registers used:
  1567 ;;		wreg, status,2
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1573 ;;      Params:         0       0       0       0       0
  1574 ;;      Locals:         1       0       0       0       0
  1575 ;;      Temps:          2       0       0       0       0
  1576 ;;      Totals:         3       0       0       0       0
  1577 ;;Total ram usage:        3 bytes
  1578 ;; Hardware stack levels used: 1
  1579 ;; This function calls:
  1580 ;;		Nothing
  1581 ;; This function is called by:
  1582 ;;		_GLCD_Init
  1583 ;;		_GLCD_SetDDRAM
  1584 ;;		_GLCD_Clear
  1585 ;;		_GLCD_ExtendedFunc
  1586 ;;		_GLCD_SetGDRAM
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           
  1591                           ;psect for function _GLCD_SendCommand
  1592  0601                     _GLCD_SendCommand:
  1593                           
  1594                           ;incstack = 0
  1595                           ; Regs used in _GLCD_SendCommand: [wreg+status,2]
  1596                           ;GLCD_SendCommand@cmd stored from wreg
  1597  0601  00F3               	movwf	GLCD_SendCommand@cmd
  1598  0602                     l919:
  1599                           
  1600                           ;./GLCD.h: 55:     TRISD = 0x0;
  1601  0602  1683               	bsf	3,5	;RP0=1, select bank1
  1602  0603  1303               	bcf	3,6	;RP1=0, select bank1
  1603  0604  0188               	clrf	8	;volatile
  1604  0605                     l921:
  1605                           
  1606                           ;./GLCD.h: 56:     PORTEbits.RE0 = 0;
  1607  0605  1283               	bcf	3,5	;RP0=0, select bank0
  1608  0606  1303               	bcf	3,6	;RP1=0, select bank0
  1609  0607  1009               	bcf	9,0	;volatile
  1610  0608                     l923:
  1611                           
  1612                           ;./GLCD.h: 57:     PORTEbits.RE1 = 0;
  1613  0608  1089               	bcf	9,1	;volatile
  1614  0609                     l925:
  1615                           
  1616                           ;./GLCD.h: 58:     PORTD = cmd;
  1617  0609  0873               	movf	GLCD_SendCommand@cmd,w
  1618  060A  0088               	movwf	8	;volatile
  1619  060B                     l927:
  1620                           
  1621                           ;./GLCD.h: 59:     PORTEbits.RE2 = 1;
  1622  060B  1509               	bsf	9,2	;volatile
  1623  060C                     l929:
  1624                           
  1625                           ;./GLCD.h: 60:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1626  060C  300D               	movlw	13
  1627  060D  00F2               	movwf	??_GLCD_SendCommand+1
  1628  060E  30FB               	movlw	251
  1629  060F  00F1               	movwf	??_GLCD_SendCommand
  1630  0610                     u397:
  1631  0610  0BF1               	decfsz	??_GLCD_SendCommand,f
  1632  0611  2E10               	goto	u397
  1633  0612  0BF2               	decfsz	??_GLCD_SendCommand+1,f
  1634  0613  2E10               	goto	u397
  1635  0614  2E15               	nop2
  1636  0615                     l931:
  1637                           
  1638                           ;./GLCD.h: 61:     PORTEbits.RE2 = 0;
  1639  0615  1283               	bcf	3,5	;RP0=0, select bank0
  1640  0616  1303               	bcf	3,6	;RP1=0, select bank0
  1641  0617  1109               	bcf	9,2	;volatile
  1642  0618                     l166:
  1643  0618  0008               	return
  1644  0619                     __end_of_GLCD_SendCommand:
  1645  007E                     btemp	set	126	;btemp
  1646  007E                     wtemp0	set	126
  1647                           
  1648                           	psect	config
  1649                           
  1650                           ;Config register CONFIG1 @ 0x2007
  1651                           ;	Oscillator Selection bits
  1652                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1653                           ;	Watchdog Timer Enable bit
  1654                           ;	WDTE = ON, WDT enabled
  1655                           ;	Power-up Timer Enable bit
  1656                           ;	PWRTE = OFF, PWRT disabled
  1657                           ;	RE3/MCLR pin function select bit
  1658                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1659                           ;	Code Protection bit
  1660                           ;	CP = OFF, Program memory code protection is disabled
  1661                           ;	Data Code Protection bit
  1662                           ;	CPD = OFF, Data memory code protection is disabled
  1663                           ;	Brown Out Reset Selection bits
  1664                           ;	BOREN = ON, BOR enabled
  1665                           ;	Internal External Switchover bit
  1666                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1667                           ;	Fail-Safe Clock Monitor Enabled bit
  1668                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1669                           ;	Low Voltage Programming Enable bit
  1670                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1671                           ;	In-Circuit Debugger Mode bit
  1672                           ;	DEBUG = 0x1, unprogrammed default
  1673  2007                     	org	8199
  1674  2007  3FD9               	dw	16345
  1675                           
  1676                           ;Config register CONFIG2 @ 0x2008
  1677                           ;	Brown-out Reset Selection bit
  1678                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1679                           ;	Flash Program Memory Self Write Enable bits
  1680                           ;	WRT = OFF, Write protection off
  1681  2008                     	org	8200
  1682  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     10      13
    BANK0            80      0      29
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sp__memset	PTR void  size(1) Largest target is 2
		 -> buffer(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_MPU6050_Init
    _MPU6050_Init->_MPU6050_SetRegister
    _MPU6050_SetRegister->_I2C_Start
    _I2C_Start->_I2C_Write
    _GLCD_SetDDRAM->_GLCD_SendCommand
    _GLCD_Init->_GLCD_SendCommand

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     668
                                              7 COMMON     3     3      0
                          _GLCD_Init
                      _GLCD_SendData
                      _GLCD_SetDDRAM
                           _I2C_Init
                       _MPU6050_Init
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         1     1      0     593
                                              6 COMMON     1     1      0
                _MPU6050_SetRegister
 ---------------------------------------------------------------------------------
 (2) _MPU6050_SetRegister                                  4     3      1     593
                                              2 COMMON     4     3      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      30
                                              1 COMMON     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _GLCD_SetDDRAM                                        1     1      0      30
                                              3 COMMON     1     1      0
                   _GLCD_SendCommand
 ---------------------------------------------------------------------------------
 (1) _GLCD_SendData                                        3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _GLCD_Init                                            3     3      0      15
                                              3 COMMON     3     3      0
                   _GLCD_SendCommand
 ---------------------------------------------------------------------------------
 (2) _GLCD_SendCommand                                     3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GLCD_Init
     _GLCD_SendCommand
   _GLCD_SendData
   _GLCD_SetDDRAM
     _GLCD_SendCommand
   _I2C_Init
   _MPU6050_Init
     _MPU6050_SetRegister
       _I2C_Start
         _I2C_Write
           _I2C_Wait
       _I2C_Stop
       _I2C_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               55      0       0       9        0.0%
BITBANK3            55      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      1D       5       36.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               D      A       D       1      100.0%
BITCOMMON            D      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2A      12        0.0%
ABS                  0      0      2A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Mar 29 00:06:30 2021

          __size_of_I2C_Start 001A                   _SSPSTATbits 0094            __size_of_I2C_Write 0014  
                          l70 064A                            l63 069D                            l81 0600  
                          l66 0635                            l91 05E2                            l68 0639  
                          l85 05CF                            l93 05E6                            l87 05D5  
                          l95 05EC                            l88 05D6                            u10 05D5  
                          u11 05D4                            u20 05FD                            u21 05FC  
                          u30 0639                            u31 0638                            u40 0642  
                          u41 0641                            u50 05E6                            u51 05E5  
                          fsr 0004                           l121 06D0                           l124 066E  
                         l126 0673                           l163 0709                           l166 0618  
                         l169 0630                           l178 05CE                           l921 0605  
                         l931 0615                           l923 0608                           l843 05CF  
                         l851 05FD                           l925 0609                           l941 0685  
                         l933 0675                           l845 05EE                           l861 0632  
                         l927 060B                           l919 0602                           l951 069A  
                         l943 068C                           l935 067C                           l847 05F2  
                         l863 0642                           l871 05DF                           l929 060C  
                         l945 0692                           l937 067F                           l857 05FF  
                         l849 05F7                           l947 0695                           l939 0680  
                         l867 0644                           l949 0697                           l991 06D1  
                         l993 06DA                           l995 06DD                           l997 06DE  
                         l999 06EB                           u140 0685                           u300 0742  
                         u141 0684                           u301 0741                           u310 0756  
                         u311 0755                           u320 076A                           u321 0769  
                         u270 065A                           u271 0659                           u280 0668  
                         u281 0667                           u337 0782                           u290 072E  
                         u347 07A1                           u291 072D                           u357 07C0  
                         u367 07DF                           u377 0628                           u387 06E4  
                         u397 0610                           indf 0000            __size_of_GLCD_Init 0039  
                        l1001 06F1                          l1003 06F7                          l1011 061D  
                        l1005 06FD                          l1021 062D                          l1013 0620  
                        l1007 0703                          l1015 0621                          l1023 05C8  
                        l1017 0623                          l1009 061A                          l1019 0624  
                        l1203 071E                          l1213 0732                          l1205 0724  
                        l1223 0746                          l1215 0738                          l1207 0728  
                        l1241 077C                          l1233 075A                          l1225 074C  
                        l1217 073C                          l1209 072E                          l1251 07AE  
                        l1243 0789                          l1235 0760                          l1227 0750  
                        l1219 0742                          l1181 064C                          l1253 07B4  
                        l1245 078F                          l1237 0764                          l1229 0756  
                        l1191 0668                          l1183 064C                          l1255 07BA  
                        l1247 0795                          l1239 076A                          l1185 0655  
                        l1193 069E                          l1257 07D9                          l1249 07A8  
                        l1187 065A                          l1195 070A                          l1189 0663  
                        l1197 071A                          _main 070A              __end_of_I2C_Init 069E  
                        _temp 002C                          btemp 007E              __end_of_I2C_Wait 05D7  
            __end_of_I2C_Stop 05ED                          start 0001                         ?_main 0071  
                       _ANSEL 0188                         _PORTD 0008                         _TRISA 0085  
                       _TRISD 0088                         _SSPIE 0463                         _TRISE 0089  
                       _SSPIF 0063                 ?_MPU6050_Init 0071                         _index 007B  
                       _gyroX 0028                         _gyroY 0024                         _gyroZ 0020  
           __end_of_I2C_Start 064B             __end_of_I2C_Write 0601                         status 0003  
                       wtemp0 007E               __initialization 07EA                  __end_of_main 07EA  
           __end_of_GLCD_Init 070A                        ??_main 0078                ??_MPU6050_Init 0077  
            I2C_Start@address 0072                        _ANSELH 0189                        _SSPADD 0093  
                      _SSPBUF 0013                        _accelX 0038                        _accelY 0034  
                      _accelZ 0030             GLCD_SendData@data 0073                        _buffer 007C  
    __end_of_GLCD_SendCommand 0619        MPU6050_SetRegister@reg 0075                     ?_I2C_Init 0071  
                   ?_I2C_Wait 0071                     ?_I2C_Stop 0071       __end_of__initialization 07FC  
__size_of_MPU6050_SetRegister 0029         __end_of_GLCD_SetDDRAM 05CF                __pcstackCOMMON 0071  
                __pidataBANK0 05C6         __end_of_GLCD_SendData 0631                    ??_I2C_Init 0071  
                  ??_I2C_Wait 0071                    ??_I2C_Stop 0071                    __pbssBANK0 0020  
                I2C_Init@mode 0071                    __pmaintext 070A          __end_of_MPU6050_Init 06D1  
                     _ACKSTAT 048E                       _SSPCON2 0091                       _SSPSTAT 0094  
                   _I2C_Start 0631                     _I2C_Write 05ED                       _address 003C  
                     __ptext1 069E                       __ptext2 064B                       __ptext3 05DF  
                     __ptext4 0631                       __ptext5 05ED                       __ptext6 05CF  
                     __ptext7 0674                       __ptext8 05C7                       __ptext9 0619  
                   _GLCD_Init 06D1                       clrloop0 05D8          end_of_initialization 07FC  
                  ?_I2C_Start 0071                    ?_I2C_Write 0071             ?_GLCD_SendCommand 0071  
                   _PORTAbits 0005                     _PORTEbits 0009                    ?_GLCD_Init 0071  
          ??_GLCD_SendCommand 0071           _MPU6050_SetRegister 064B                     _TRISCbits 0087  
           __size_of_I2C_Init 002A             __size_of_I2C_Wait 0008             __size_of_I2C_Stop 000E  
       __size_of_MPU6050_Init 0033          GLCD_SetDDRAM@address 0074          ?_MPU6050_SetRegister 0073  
         start_initialization 07EA                  _MPU6050_Init 069E                   ??_I2C_Start 0072  
                 ??_I2C_Write 0071         ??_MPU6050_SetRegister 0074                   __pdataBANK0 003C  
                 ??_GLCD_Init 0074                   __pbssCOMMON 007B                     ___latbits 0002  
  MPU6050_SetRegister@ackMode 0076        __size_of_GLCD_SetDDRAM 0008        __size_of_GLCD_SendData 0018  
                    _I2C_Init 0674                      _I2C_Wait 05CF                      _I2C_Stop 05DF  
                   clear_ram0 05D7                 _GLCD_SetDDRAM 05C7                 _GLCD_SendData 0619  
   __size_of_GLCD_SendCommand 0018                ?_GLCD_SetDDRAM 0071                 I2C_Write@data 0071  
              ?_GLCD_SendData 0071                      __ptext10 06D1                      __ptext11 0601  
               __size_of_main 00E0      MPU6050_SetRegister@value 0073   __end_of_MPU6050_SetRegister 0674  
             ??_GLCD_SetDDRAM 0074               ??_GLCD_SendData 0071           GLCD_SendCommand@cmd 0073  
                 _SSPCON2bits 0091              _GLCD_SendCommand 0601                    _SSPCONbits 0014  
