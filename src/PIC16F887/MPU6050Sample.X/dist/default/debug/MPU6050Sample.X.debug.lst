

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Mar 14 13:37:15 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0013                     _SSPBUF	set	19
   211  0014                     _SSPCONbits	set	20
   212  0063                     _SSPIF	set	99
   213  0091                     _SSPCON2bits	set	145
   214  0093                     _SSPADD	set	147
   215  0091                     _SSPCON2	set	145
   216  0094                     _SSPSTATbits	set	148
   217  0094                     _SSPSTAT	set	148
   218  0087                     _TRISCbits	set	135
   219  048E                     _ACKSTAT	set	1166
   220  0463                     _SSPIE	set	1123
   221                           
   222                           	psect	cinit
   223  07FA                     start_initialization:	
   224                           ; #config settings
   225                           
   226  07FA                     __initialization:
   227                           
   228                           ; Clear objects allocated to COMMON
   229  07FA  01F7               	clrf	__pbssCOMMON& (0+127)
   230  07FB  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   231  07FC                     end_of_initialization:	
   232                           ;End of C runtime variable initialization code
   233                           
   234  07FC                     __end_of__initialization:
   235  07FC  0183               	clrf	3
   236  07FD  120A  118A  2FA6   	ljmp	_main	;jump to C main() function
   237                           
   238                           	psect	bssCOMMON
   239  0077                     __pbssCOMMON:
   240  0077                     _ackMode:
   241  0077                     	ds	1
   242  0078                     _data:
   243  0078                     	ds	1
   244                           
   245                           	psect	cstackCOMMON
   246  0071                     __pcstackCOMMON:
   247  0071                     ?_I2C_Write:
   248  0071                     ??_I2C_Write:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0071                     ?_I2C_Wait:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0071                     ??_I2C_Wait:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0071                     ?_I2C_Ack:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0071                     ??_I2C_Ack:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0071                     ?_I2C_Nack:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0071                     ??_I2C_Nack:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0071                     ?_I2C_Init:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0071                     ??_I2C_Init:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0071                     ?_I2C_Start:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0071                     ?_I2C_RepeatedStart:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0071                     ?_I2C_Stop:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0071                     ??_I2C_Stop:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0071                     ?_I2C_Read:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0071                     ??_I2C_Read:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0071                     ?_main:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0071                     I2C_Init@mode:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0071                     I2C_Write@data:	
   300                           ; 1 bytes @ 0x0
   301                           
   302                           
   303                           ; 1 bytes @ 0x0
   304  0071                     	ds	1
   305  0072                     ??_I2C_Start:
   306  0072                     ??_I2C_RepeatedStart:	
   307                           ; 1 bytes @ 0x1
   308                           
   309  0072                     I2C_Start@address:	
   310                           ; 1 bytes @ 0x1
   311                           
   312  0072                     I2C_RepeatedStart@address:	
   313                           ; 1 bytes @ 0x1
   314                           
   315  0072                     I2C_Read@mode:	
   316                           ; 1 bytes @ 0x1
   317                           
   318                           
   319                           ; 1 bytes @ 0x1
   320  0072                     	ds	1
   321  0073                     I2C_Read@buffer:
   322                           
   323                           ; 1 bytes @ 0x2
   324  0073                     	ds	1
   325  0074                     ??_main:
   326                           
   327                           ; 1 bytes @ 0x3
   328  0074                     	ds	3
   329                           
   330                           	psect	maintext
   331  07A6                     __pmaintext:	
   332 ;;
   333 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   334 ;;
   335 ;; *************** function _main *****************
   336 ;; Defined at:
   337 ;;		line 47 in file "main.c"
   338 ;; Parameters:    Size  Location     Type
   339 ;;		None
   340 ;; Auto vars:     Size  Location     Type
   341 ;;		None
   342 ;; Return value:  Size  Location     Type
   343 ;;                  1    wreg      void 
   344 ;; Registers used:
   345 ;;		wreg, status,2, status,0, pclath, cstack
   346 ;; Tracked objects:
   347 ;;		On entry : B00/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   351 ;;      Params:         0       0       0       0       0
   352 ;;      Locals:         0       0       0       0       0
   353 ;;      Temps:          3       0       0       0       0
   354 ;;      Totals:         3       0       0       0       0
   355 ;;Total ram usage:        3 bytes
   356 ;; Hardware stack levels required when called: 3
   357 ;; This function calls:
   358 ;;		_I2C_Init
   359 ;;		_I2C_Read
   360 ;;		_I2C_RepeatedStart
   361 ;;		_I2C_Start
   362 ;;		_I2C_Stop
   363 ;;		_I2C_Write
   364 ;; This function is called by:
   365 ;;		Startup code after reset
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           
   370                           ;psect for function _main
   371  07A6                     _main:
   372  07A6                     l791:	
   373                           ;incstack = 0
   374                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   375                           
   376                           
   377                           ;main.c: 48:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   378  07A6  3006               	movlw	6
   379  07A7  00F6               	movwf	??_main+2
   380  07A8  3013               	movlw	19
   381  07A9  00F5               	movwf	??_main+1
   382  07AA  30AD               	movlw	173
   383  07AB  00F4               	movwf	??_main
   384  07AC                     u157:
   385  07AC  0BF4               	decfsz	??_main,f
   386  07AD  2FAC               	goto	u157
   387  07AE  0BF5               	decfsz	??_main+1,f
   388  07AF  2FAC               	goto	u157
   389  07B0  0BF6               	decfsz	??_main+2,f
   390  07B1  2FAC               	goto	u157
   391  07B2  2FB3               	nop2
   392  07B3                     l793:
   393                           
   394                           ;main.c: 49:     I2C_Init(I2C_MASTER_MODE);
   395  07B3  3000               	movlw	0
   396  07B4  120A  118A  277C  120A  118A  	fcall	_I2C_Init
   397  07B9                     l795:
   398                           
   399                           ;main.c: 53:         ackMode = I2C_Start(0xD2);
   400  07B9  30D2               	movlw	210
   401  07BA  120A  118A  2742  120A  118A  	fcall	_I2C_Start
   402  07BF  00F4               	movwf	??_main
   403  07C0  0874               	movf	??_main,w
   404  07C1  00F7               	movwf	_ackMode
   405  07C2                     l797:
   406                           
   407                           ;main.c: 55:         if (ackMode == ACK) {
   408  07C2  0877               	movf	_ackMode,w
   409  07C3  1D03               	btfss	3,2
   410  07C4  2FC6               	goto	u131
   411  07C5  2FC7               	goto	u130
   412  07C6                     u131:
   413  07C6  2FE9               	goto	l805
   414  07C7                     u130:
   415  07C7                     l799:
   416                           
   417                           ;main.c: 56:             I2C_Write(0x75);
   418  07C7  3075               	movlw	117
   419  07C8  120A  118A  2714  120A  118A  	fcall	_I2C_Write
   420                           
   421                           ;main.c: 57:             ackMode = I2C_RepeatedStart(0xD3);
   422  07CD  30D3               	movlw	211
   423  07CE  120A  118A  2728  120A  118A  	fcall	_I2C_RepeatedStart
   424  07D3  00F4               	movwf	??_main
   425  07D4  0874               	movf	??_main,w
   426  07D5  00F7               	movwf	_ackMode
   427  07D6                     l801:
   428                           
   429                           ;main.c: 59:             if (ackMode == ACK) {
   430  07D6  0877               	movf	_ackMode,w
   431  07D7  1D03               	btfss	3,2
   432  07D8  2FDA               	goto	u141
   433  07D9  2FDB               	goto	u140
   434  07DA                     u141:
   435  07DA  2FE9               	goto	l805
   436  07DB                     u140:
   437  07DB                     l803:
   438                           
   439                           ;main.c: 60:                 data = I2C_Read(NACK);
   440  07DB  3001               	movlw	1
   441  07DC  120A  118A  275C  120A  118A  	fcall	_I2C_Read
   442  07E1  00F4               	movwf	??_main
   443  07E2  0874               	movf	??_main,w
   444  07E3  00F8               	movwf	_data
   445                           
   446                           ;main.c: 61:                 I2C_Stop();
   447  07E4  120A  118A  2706  120A  118A  	fcall	_I2C_Stop
   448  07E9                     l805:
   449                           
   450                           ;main.c: 65:         _delay((unsigned long)((500)*(4000000/4000.0)));
   451  07E9  3003               	movlw	3
   452  07EA  00F6               	movwf	??_main+2
   453  07EB  308A               	movlw	138
   454  07EC  00F5               	movwf	??_main+1
   455  07ED  3055               	movlw	85
   456  07EE  00F4               	movwf	??_main
   457  07EF                     u167:
   458  07EF  0BF4               	decfsz	??_main,f
   459  07F0  2FEF               	goto	u167
   460  07F1  0BF5               	decfsz	??_main+1,f
   461  07F2  2FEF               	goto	u167
   462  07F3  0BF6               	decfsz	??_main+2,f
   463  07F4  2FEF               	goto	u167
   464  07F5  2FF6               	nop2
   465  07F6  2FB9               	goto	l795
   466  07F7  120A  118A  2801   	ljmp	start
   467  07FA                     __end_of_main:
   468                           
   469                           	psect	text1
   470  0706                     __ptext1:	
   471 ;; *************** function _I2C_Stop *****************
   472 ;; Defined at:
   473 ;;		line 74 in file "./i2c.h"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      unsigned char 
   480 ;; Registers used:
   481 ;;		wreg
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   487 ;;      Params:         0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0
   489 ;;      Temps:          0       0       0       0       0
   490 ;;      Totals:         0       0       0       0       0
   491 ;;Total ram usage:        0 bytes
   492 ;; Hardware stack levels used: 1
   493 ;; This function calls:
   494 ;;		Nothing
   495 ;; This function is called by:
   496 ;;		_main
   497 ;;		_MPU6050_SetRegister
   498 ;;		_MPU6050_ReadRegister
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           
   503                           ;psect for function _I2C_Stop
   504  0706                     _I2C_Stop:
   505  0706                     l769:	
   506                           ;incstack = 0
   507                           ; Regs used in _I2C_Stop: [wreg]
   508                           
   509                           
   510                           ;./i2c.h: 75:     SSPCON2bits.PEN = 1;
   511  0706  1683               	bsf	3,5	;RP0=1, select bank1
   512  0707  1303               	bcf	3,6	;RP1=0, select bank1
   513  0708  1511               	bsf	17,2	;volatile
   514  0709                     l67:	
   515                           ;./i2c.h: 76:     while(SSPCON2bits.PEN);
   516                           
   517  0709  1911               	btfsc	17,2	;volatile
   518  070A  2F0C               	goto	u101
   519  070B  2F0D               	goto	u100
   520  070C                     u101:
   521  070C  2F09               	goto	l67
   522  070D                     u100:
   523  070D                     l69:
   524                           
   525                           ;./i2c.h: 77:     SSPIF = 0;
   526  070D  1283               	bcf	3,5	;RP0=0, select bank0
   527  070E  1303               	bcf	3,6	;RP1=0, select bank0
   528  070F  118C               	bcf	12,3	;volatile
   529                           
   530                           ;./i2c.h: 78:     if (SSPSTATbits.P)
   531  0710  1683               	bsf	3,5	;RP0=1, select bank1
   532  0711  1303               	bcf	3,6	;RP1=0, select bank1
   533  0712  0814               	movf	20,w	;volatile
   534  0713                     l71:
   535  0713  0008               	return
   536  0714                     __end_of_I2C_Stop:
   537                           
   538                           	psect	text2
   539  0742                     __ptext2:	
   540 ;; *************** function _I2C_Start *****************
   541 ;; Defined at:
   542 ;;		line 36 in file "./i2c.h"
   543 ;; Parameters:    Size  Location     Type
   544 ;;  address         1    wreg     unsigned char 
   545 ;; Auto vars:     Size  Location     Type
   546 ;;  address         1    1[COMMON] unsigned char 
   547 ;; Return value:  Size  Location     Type
   548 ;;                  1    wreg      enum E1477
   549 ;; Registers used:
   550 ;;		wreg, status,2, status,0, pclath, cstack
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   556 ;;      Params:         0       0       0       0       0
   557 ;;      Locals:         1       0       0       0       0
   558 ;;      Temps:          0       0       0       0       0
   559 ;;      Totals:         1       0       0       0       0
   560 ;;Total ram usage:        1 bytes
   561 ;; Hardware stack levels used: 1
   562 ;; Hardware stack levels required when called: 2
   563 ;; This function calls:
   564 ;;		_I2C_Write
   565 ;; This function is called by:
   566 ;;		_main
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           
   571                           ;psect for function _I2C_Start
   572  0742                     _I2C_Start:
   573                           
   574                           ;incstack = 0
   575                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
   576                           ;I2C_Start@address stored from wreg
   577  0742  00F2               	movwf	I2C_Start@address
   578  0743                     l749:
   579                           
   580                           ;./i2c.h: 37:     SSPCON2bits.SEN = 1;
   581  0743  1683               	bsf	3,5	;RP0=1, select bank1
   582  0744  1303               	bcf	3,6	;RP1=0, select bank1
   583  0745  1411               	bsf	17,0	;volatile
   584  0746                     l42:	
   585                           ;./i2c.h: 38:     while (SSPCON2bits.SEN);
   586                           
   587  0746  1811               	btfsc	17,0	;volatile
   588  0747  2F49               	goto	u61
   589  0748  2F4A               	goto	u60
   590  0749                     u61:
   591  0749  2F46               	goto	l42
   592  074A                     u60:
   593  074A                     l44:
   594                           
   595                           ;./i2c.h: 39:     SSPIF = 0;
   596  074A  1283               	bcf	3,5	;RP0=0, select bank0
   597  074B  1303               	bcf	3,6	;RP1=0, select bank0
   598  074C  118C               	bcf	12,3	;volatile
   599                           
   600                           ;./i2c.h: 41:     if(!SSPSTATbits.S)
   601  074D  1683               	bsf	3,5	;RP0=1, select bank1
   602  074E  1303               	bcf	3,6	;RP1=0, select bank1
   603  074F  1994               	btfsc	20,3	;volatile
   604  0750  2F52               	goto	u71
   605  0751  2F53               	goto	u70
   606  0752                     u71:
   607  0752  2F55               	goto	l755
   608  0753                     u70:
   609  0753                     l751:
   610                           
   611                           ;./i2c.h: 42:         return 1;
   612  0753  3001               	movlw	1
   613  0754  2F5B               	goto	l46
   614  0755                     l755:
   615                           
   616                           ;./i2c.h: 44:     return I2C_Write(address);
   617  0755  0872               	movf	I2C_Start@address,w
   618  0756  120A  118A  2714  120A  118A  	fcall	_I2C_Write
   619  075B                     l46:
   620  075B  0008               	return
   621  075C                     __end_of_I2C_Start:
   622                           
   623                           	psect	text3
   624  0728                     __ptext3:	
   625 ;; *************** function _I2C_RepeatedStart *****************
   626 ;; Defined at:
   627 ;;		line 47 in file "./i2c.h"
   628 ;; Parameters:    Size  Location     Type
   629 ;;  address         1    wreg     unsigned char 
   630 ;; Auto vars:     Size  Location     Type
   631 ;;  address         1    1[COMMON] unsigned char 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      enum E1477
   634 ;; Registers used:
   635 ;;		wreg, status,2, status,0, pclath, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   641 ;;      Params:         0       0       0       0       0
   642 ;;      Locals:         1       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0
   644 ;;      Totals:         1       0       0       0       0
   645 ;;Total ram usage:        1 bytes
   646 ;; Hardware stack levels used: 1
   647 ;; Hardware stack levels required when called: 2
   648 ;; This function calls:
   649 ;;		_I2C_Write
   650 ;; This function is called by:
   651 ;;		_main
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           
   656                           ;psect for function _I2C_RepeatedStart
   657  0728                     _I2C_RepeatedStart:
   658                           
   659                           ;incstack = 0
   660                           ; Regs used in _I2C_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
   661                           ;I2C_RepeatedStart@address stored from wreg
   662  0728  00F2               	movwf	I2C_RepeatedStart@address
   663  0729                     l759:
   664                           
   665                           ;./i2c.h: 48:     SSPCON2bits.RSEN = 1;
   666  0729  1683               	bsf	3,5	;RP0=1, select bank1
   667  072A  1303               	bcf	3,6	;RP1=0, select bank1
   668  072B  1491               	bsf	17,1	;volatile
   669  072C                     l49:	
   670                           ;./i2c.h: 50:     while (SSPCON2bits.RSEN);
   671                           
   672  072C  1891               	btfsc	17,1	;volatile
   673  072D  2F2F               	goto	u81
   674  072E  2F30               	goto	u80
   675  072F                     u81:
   676  072F  2F2C               	goto	l49
   677  0730                     u80:
   678  0730                     l51:
   679                           
   680                           ;./i2c.h: 51:     SSPIF = 0;
   681  0730  1283               	bcf	3,5	;RP0=0, select bank0
   682  0731  1303               	bcf	3,6	;RP1=0, select bank0
   683  0732  118C               	bcf	12,3	;volatile
   684                           
   685                           ;./i2c.h: 53:     if(!SSPSTATbits.S)
   686  0733  1683               	bsf	3,5	;RP0=1, select bank1
   687  0734  1303               	bcf	3,6	;RP1=0, select bank1
   688  0735  1994               	btfsc	20,3	;volatile
   689  0736  2F38               	goto	u91
   690  0737  2F39               	goto	u90
   691  0738                     u91:
   692  0738  2F3B               	goto	l765
   693  0739                     u90:
   694  0739                     l761:
   695                           
   696                           ;./i2c.h: 54:         return 1;
   697  0739  3001               	movlw	1
   698  073A  2F41               	goto	l53
   699  073B                     l765:
   700                           
   701                           ;./i2c.h: 56:     return I2C_Write(address);
   702  073B  0872               	movf	I2C_RepeatedStart@address,w
   703  073C  120A  118A  2714  120A  118A  	fcall	_I2C_Write
   704  0741                     l53:
   705  0741  0008               	return
   706  0742                     __end_of_I2C_RepeatedStart:
   707                           
   708                           	psect	text4
   709  0714                     __ptext4:	
   710 ;; *************** function _I2C_Write *****************
   711 ;; Defined at:
   712 ;;		line 59 in file "./i2c.h"
   713 ;; Parameters:    Size  Location     Type
   714 ;;  data            1    wreg     unsigned char 
   715 ;; Auto vars:     Size  Location     Type
   716 ;;  data            1    0[COMMON] unsigned char 
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      unsigned char 
   719 ;; Registers used:
   720 ;;		wreg, status,2, status,0, pclath, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   726 ;;      Params:         0       0       0       0       0
   727 ;;      Locals:         1       0       0       0       0
   728 ;;      Temps:          0       0       0       0       0
   729 ;;      Totals:         1       0       0       0       0
   730 ;;Total ram usage:        1 bytes
   731 ;; Hardware stack levels used: 1
   732 ;; Hardware stack levels required when called: 1
   733 ;; This function calls:
   734 ;;		_I2C_Wait
   735 ;; This function is called by:
   736 ;;		_I2C_Start
   737 ;;		_I2C_RepeatedStart
   738 ;;		_main
   739 ;;		_MPU6050_SetRegister
   740 ;;		_MPU6050_ReadRegister
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           
   745                           ;psect for function _I2C_Write
   746  0714                     _I2C_Write:
   747                           
   748                           ;incstack = 0
   749                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
   750                           ;I2C_Write@data stored from wreg
   751  0714  00F1               	movwf	I2C_Write@data
   752  0715                     l709:
   753                           
   754                           ;./i2c.h: 60:     SSPBUF = data;
   755  0715  0871               	movf	I2C_Write@data,w
   756  0716  1283               	bcf	3,5	;RP0=0, select bank0
   757  0717  1303               	bcf	3,6	;RP1=0, select bank0
   758  0718  0093               	movwf	19	;volatile
   759  0719                     l711:
   760                           
   761                           ;./i2c.h: 61:     I2C_Wait();
   762  0719  120A  118A  26EC  120A  118A  	fcall	_I2C_Wait
   763  071E                     l713:
   764                           
   765                           ;./i2c.h: 63:     if(ACKSTAT)
   766  071E  1683               	bsf	3,5	;RP0=1, select bank1
   767  071F  1303               	bcf	3,6	;RP1=0, select bank1
   768  0720  1F11               	btfss	17,6	;volatile
   769  0721  2F23               	goto	u21
   770  0722  2F24               	goto	u20
   771  0723                     u21:
   772  0723  2F26               	goto	l721
   773  0724                     u20:
   774  0724                     l715:
   775                           
   776                           ;./i2c.h: 64:         return NACK;
   777  0724  3001               	movlw	1
   778  0725  2F27               	goto	l57
   779  0726                     l721:
   780                           
   781                           ;./i2c.h: 66:         return ACK;
   782  0726  3000               	movlw	0
   783  0727                     l57:
   784  0727  0008               	return
   785  0728                     __end_of_I2C_Write:
   786                           
   787                           	psect	text5
   788  06EC                     __ptext5:	
   789 ;; *************** function _I2C_Wait *****************
   790 ;; Defined at:
   791 ;;		line 69 in file "./i2c.h"
   792 ;; Parameters:    Size  Location     Type
   793 ;;		None
   794 ;; Auto vars:     Size  Location     Type
   795 ;;		None
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		None
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   805 ;;      Params:         0       0       0       0       0
   806 ;;      Locals:         0       0       0       0       0
   807 ;;      Temps:          0       0       0       0       0
   808 ;;      Totals:         0       0       0       0       0
   809 ;;Total ram usage:        0 bytes
   810 ;; Hardware stack levels used: 1
   811 ;; This function calls:
   812 ;;		Nothing
   813 ;; This function is called by:
   814 ;;		_I2C_Write
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           
   819                           ;psect for function _I2C_Wait
   820  06EC                     _I2C_Wait:
   821  06EC                     l707:	
   822                           ;incstack = 0
   823                           ; Regs used in _I2C_Wait: []
   824                           
   825  06EC                     l61:	
   826                           ;./i2c.h: 70:     while (!SSPIF);
   827                           
   828  06EC  1283               	bcf	3,5	;RP0=0, select bank0
   829  06ED  1303               	bcf	3,6	;RP1=0, select bank0
   830  06EE  1D8C               	btfss	12,3	;volatile
   831  06EF  2EF1               	goto	u11
   832  06F0  2EF2               	goto	u10
   833  06F1                     u11:
   834  06F1  2EEC               	goto	l61
   835  06F2                     u10:
   836  06F2                     l63:
   837                           
   838                           ;./i2c.h: 71:     SSPIF = 0;
   839  06F2  118C               	bcf	12,3	;volatile
   840  06F3                     l64:
   841  06F3  0008               	return
   842  06F4                     __end_of_I2C_Wait:
   843                           
   844                           	psect	text6
   845  075C                     __ptext6:	
   846 ;; *************** function _I2C_Read *****************
   847 ;; Defined at:
   848 ;;		line 84 in file "./i2c.h"
   849 ;; Parameters:    Size  Location     Type
   850 ;;  mode            1    wreg     enum E1477
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  mode            1    1[COMMON] enum E1477
   853 ;;  buffer          1    2[COMMON] unsigned char 
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      unsigned char 
   856 ;; Registers used:
   857 ;;		wreg, status,2, status,0, pclath, cstack
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   863 ;;      Params:         0       0       0       0       0
   864 ;;      Locals:         2       0       0       0       0
   865 ;;      Temps:          1       0       0       0       0
   866 ;;      Totals:         3       0       0       0       0
   867 ;;Total ram usage:        3 bytes
   868 ;; Hardware stack levels used: 1
   869 ;; Hardware stack levels required when called: 1
   870 ;; This function calls:
   871 ;;		_I2C_Ack
   872 ;;		_I2C_Nack
   873 ;; This function is called by:
   874 ;;		_main
   875 ;;		_MPU6050_ReadRegister
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           
   880                           ;psect for function _I2C_Read
   881  075C                     _I2C_Read:
   882                           
   883                           ;incstack = 0
   884                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
   885                           ;I2C_Read@mode stored from wreg
   886  075C  00F2               	movwf	I2C_Read@mode
   887  075D                     l775:
   888  075D                     l777:
   889                           
   890                           ;./i2c.h: 86:     SSPCON2bits.RCEN = 1;
   891  075D  1683               	bsf	3,5	;RP0=1, select bank1
   892  075E  1303               	bcf	3,6	;RP1=0, select bank1
   893  075F  1591               	bsf	17,3	;volatile
   894  0760                     l75:	
   895                           ;./i2c.h: 88:     while (!SSPSTATbits.BF);
   896                           
   897  0760  1C14               	btfss	20,0	;volatile
   898  0761  2F63               	goto	u111
   899  0762  2F64               	goto	u110
   900  0763                     u111:
   901  0763  2F60               	goto	l75
   902  0764                     u110:
   903  0764                     l779:
   904                           
   905                           ;./i2c.h: 89:     buffer = SSPBUF;
   906  0764  1283               	bcf	3,5	;RP0=0, select bank0
   907  0765  1303               	bcf	3,6	;RP1=0, select bank0
   908  0766  0813               	movf	19,w	;volatile
   909  0767  00F1               	movwf	??_I2C_Read
   910  0768  0871               	movf	??_I2C_Read,w
   911  0769  00F3               	movwf	I2C_Read@buffer
   912  076A                     l781:
   913                           
   914                           ;./i2c.h: 91:     if(mode == ACK) {
   915  076A  0872               	movf	I2C_Read@mode,w
   916  076B  1D03               	btfss	3,2
   917  076C  2F6E               	goto	u121
   918  076D  2F6F               	goto	u120
   919  076E                     u121:
   920  076E  2F75               	goto	l785
   921  076F                     u120:
   922  076F                     l783:
   923                           
   924                           ;./i2c.h: 92:         I2C_Ack();
   925  076F  120A  118A  26F4  120A  118A  	fcall	_I2C_Ack
   926                           
   927                           ;./i2c.h: 93:     } else {
   928  0774  2F7A               	goto	l787
   929  0775                     l785:
   930                           
   931                           ;./i2c.h: 94:         I2C_Nack();
   932  0775  120A  118A  26FD  120A  118A  	fcall	_I2C_Nack
   933  077A                     l787:
   934                           
   935                           ;./i2c.h: 97:     return buffer;
   936  077A  0873               	movf	I2C_Read@buffer,w
   937  077B                     l80:
   938  077B  0008               	return
   939  077C                     __end_of_I2C_Read:
   940                           
   941                           	psect	text7
   942  06FD                     __ptext7:	
   943 ;; *************** function _I2C_Nack *****************
   944 ;; Defined at:
   945 ;;		line 106 in file "./i2c.h"
   946 ;; Parameters:    Size  Location     Type
   947 ;;		None
   948 ;; Auto vars:     Size  Location     Type
   949 ;;		None
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		None
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   959 ;;      Params:         0       0       0       0       0
   960 ;;      Locals:         0       0       0       0       0
   961 ;;      Temps:          0       0       0       0       0
   962 ;;      Totals:         0       0       0       0       0
   963 ;;Total ram usage:        0 bytes
   964 ;; Hardware stack levels used: 1
   965 ;; This function calls:
   966 ;;		Nothing
   967 ;; This function is called by:
   968 ;;		_I2C_Read
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           
   973                           ;psect for function _I2C_Nack
   974  06FD                     _I2C_Nack:
   975  06FD                     l727:	
   976                           ;incstack = 0
   977                           ; Regs used in _I2C_Nack: []
   978                           
   979                           
   980                           ;./i2c.h: 107:     SSPCON2bits.ACKDT = 1;
   981  06FD  1683               	bsf	3,5	;RP0=1, select bank1
   982  06FE  1303               	bcf	3,6	;RP1=0, select bank1
   983  06FF  1691               	bsf	17,5	;volatile
   984                           
   985                           ;./i2c.h: 108:     SSPCON2bits.ACKEN = 1;
   986  0700  1611               	bsf	17,4	;volatile
   987  0701                     l89:	
   988                           ;./i2c.h: 109:     while(SSPCON2bits.ACKEN);
   989                           
   990  0701  1A11               	btfsc	17,4	;volatile
   991  0702  2F04               	goto	u41
   992  0703  2F05               	goto	u40
   993  0704                     u41:
   994  0704  2F01               	goto	l89
   995  0705                     u40:
   996  0705                     l92:
   997  0705  0008               	return
   998  0706                     __end_of_I2C_Nack:
   999                           
  1000                           	psect	text8
  1001  06F4                     __ptext8:	
  1002 ;; *************** function _I2C_Ack *****************
  1003 ;; Defined at:
  1004 ;;		line 100 in file "./i2c.h"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;		None
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;		None
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		None
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1018 ;;      Params:         0       0       0       0       0
  1019 ;;      Locals:         0       0       0       0       0
  1020 ;;      Temps:          0       0       0       0       0
  1021 ;;      Totals:         0       0       0       0       0
  1022 ;;Total ram usage:        0 bytes
  1023 ;; Hardware stack levels used: 1
  1024 ;; This function calls:
  1025 ;;		Nothing
  1026 ;; This function is called by:
  1027 ;;		_I2C_Read
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           
  1032                           ;psect for function _I2C_Ack
  1033  06F4                     _I2C_Ack:
  1034  06F4                     l725:	
  1035                           ;incstack = 0
  1036                           ; Regs used in _I2C_Ack: []
  1037                           
  1038                           
  1039                           ;./i2c.h: 101:     SSPCON2bits.ACKDT = 0;
  1040  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  1041  06F5  1303               	bcf	3,6	;RP1=0, select bank1
  1042  06F6  1291               	bcf	17,5	;volatile
  1043                           
  1044                           ;./i2c.h: 102:     SSPCON2bits.ACKEN = 1;
  1045  06F7  1611               	bsf	17,4	;volatile
  1046  06F8                     l83:	
  1047                           ;./i2c.h: 103:     while(SSPCON2bits.ACKEN);
  1048                           
  1049  06F8  1A11               	btfsc	17,4	;volatile
  1050  06F9  2EFB               	goto	u31
  1051  06FA  2EFC               	goto	u30
  1052  06FB                     u31:
  1053  06FB  2EF8               	goto	l83
  1054  06FC                     u30:
  1055  06FC                     l86:
  1056  06FC  0008               	return
  1057  06FD                     __end_of_I2C_Ack:
  1058                           
  1059                           	psect	text9
  1060  077C                     __ptext9:	
  1061 ;; *************** function _I2C_Init *****************
  1062 ;; Defined at:
  1063 ;;		line 17 in file "./i2c.h"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;  mode            1    wreg     enum E1473
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  mode            1    0[COMMON] enum E1473
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, status,2, status,0
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1077 ;;      Params:         0       0       0       0       0
  1078 ;;      Locals:         1       0       0       0       0
  1079 ;;      Temps:          0       0       0       0       0
  1080 ;;      Totals:         1       0       0       0       0
  1081 ;;Total ram usage:        1 bytes
  1082 ;; Hardware stack levels used: 1
  1083 ;; This function calls:
  1084 ;;		Nothing
  1085 ;; This function is called by:
  1086 ;;		_main
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           
  1091                           ;psect for function _I2C_Init
  1092  077C                     _I2C_Init:
  1093                           
  1094                           ;incstack = 0
  1095                           ; Regs used in _I2C_Init: [wreg+status,2+status,0]
  1096                           ;I2C_Init@mode stored from wreg
  1097  077C  00F1               	movwf	I2C_Init@mode
  1098  077D                     l729:
  1099                           
  1100                           ;./i2c.h: 18:     TRISCbits.TRISC3 = 1;
  1101  077D  1683               	bsf	3,5	;RP0=1, select bank1
  1102  077E  1303               	bcf	3,6	;RP1=0, select bank1
  1103  077F  1587               	bsf	7,3	;volatile
  1104                           
  1105                           ;./i2c.h: 19:     TRISCbits.TRISC4 = 1;
  1106  0780  1607               	bsf	7,4	;volatile
  1107                           
  1108                           ;./i2c.h: 20:     SSPCONbits.SSPEN = 1;
  1109  0781  1283               	bcf	3,5	;RP0=0, select bank0
  1110  0782  1303               	bcf	3,6	;RP1=0, select bank0
  1111  0783  1694               	bsf	20,5	;volatile
  1112  0784                     l731:
  1113                           
  1114                           ;./i2c.h: 21:     SSPSTAT = 0;
  1115  0784  1683               	bsf	3,5	;RP0=1, select bank1
  1116  0785  1303               	bcf	3,6	;RP1=0, select bank1
  1117  0786  0194               	clrf	20	;volatile
  1118  0787                     l733:
  1119                           
  1120                           ;./i2c.h: 22:     SSPSTATbits.SMP = 1;
  1121  0787  1794               	bsf	20,7	;volatile
  1122  0788                     l735:
  1123                           
  1124                           ;./i2c.h: 24:     if(mode == I2C_MASTER_MODE) {
  1125  0788  0871               	movf	I2C_Init@mode,w
  1126  0789  1D03               	btfss	3,2
  1127  078A  2F8C               	goto	u51
  1128  078B  2F8D               	goto	u50
  1129  078C                     u51:
  1130  078C  2F94               	goto	l739
  1131  078D                     u50:
  1132  078D                     l737:
  1133                           
  1134                           ;./i2c.h: 25:         SSPCONbits.SSPM = 0x8;
  1135  078D  1283               	bcf	3,5	;RP0=0, select bank0
  1136  078E  1303               	bcf	3,6	;RP1=0, select bank0
  1137  078F  0814               	movf	20,w	;volatile
  1138  0790  39F0               	andlw	-16
  1139  0791  3808               	iorlw	8
  1140  0792  0094               	movwf	20	;volatile
  1141                           
  1142                           ;./i2c.h: 26:     } else {
  1143  0793  2F9A               	goto	l741
  1144  0794                     l739:
  1145                           
  1146                           ;./i2c.h: 27:         SSPCONbits.SSPM = 0x4;
  1147  0794  1283               	bcf	3,5	;RP0=0, select bank0
  1148  0795  1303               	bcf	3,6	;RP1=0, select bank0
  1149  0796  0814               	movf	20,w	;volatile
  1150  0797  39F0               	andlw	-16
  1151  0798  3804               	iorlw	4
  1152  0799  0094               	movwf	20	;volatile
  1153  079A                     l741:
  1154                           
  1155                           ;./i2c.h: 30:     SSPCON2 = 0;
  1156  079A  1683               	bsf	3,5	;RP0=1, select bank1
  1157  079B  1303               	bcf	3,6	;RP1=0, select bank1
  1158  079C  0191               	clrf	17	;volatile
  1159  079D                     l743:
  1160                           
  1161                           ;./i2c.h: 31:     SSPADD = 0x9;
  1162  079D  3009               	movlw	9
  1163  079E  0093               	movwf	19	;volatile
  1164  079F                     l745:
  1165                           
  1166                           ;./i2c.h: 32:     SSPIF=0;
  1167  079F  1283               	bcf	3,5	;RP0=0, select bank0
  1168  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  1169  07A1  118C               	bcf	12,3	;volatile
  1170  07A2                     l747:
  1171                           
  1172                           ;./i2c.h: 33:     SSPIE=1;
  1173  07A2  1683               	bsf	3,5	;RP0=1, select bank1
  1174  07A3  1303               	bcf	3,6	;RP1=0, select bank1
  1175  07A4  158C               	bsf	12,3	;volatile
  1176  07A5                     l39:
  1177  07A5  0008               	return
  1178  07A6                     __end_of_I2C_Init:
  1179  007E                     btemp	set	126	;btemp
  1180  007E                     wtemp0	set	126
  1181                           
  1182                           	psect	config
  1183                           
  1184                           ;Config register CONFIG1 @ 0x2007
  1185                           ;	Oscillator Selection bits
  1186                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1187                           ;	Watchdog Timer Enable bit
  1188                           ;	WDTE = ON, WDT enabled
  1189                           ;	Power-up Timer Enable bit
  1190                           ;	PWRTE = OFF, PWRT disabled
  1191                           ;	RE3/MCLR pin function select bit
  1192                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1193                           ;	Code Protection bit
  1194                           ;	CP = OFF, Program memory code protection is disabled
  1195                           ;	Data Code Protection bit
  1196                           ;	CPD = OFF, Data memory code protection is disabled
  1197                           ;	Brown Out Reset Selection bits
  1198                           ;	BOREN = ON, BOR enabled
  1199                           ;	Internal External Switchover bit
  1200                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1201                           ;	Fail-Safe Clock Monitor Enabled bit
  1202                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1203                           ;	Low Voltage Programming Enable bit
  1204                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1205                           ;	In-Circuit Debugger Mode bit
  1206                           ;	DEBUG = 0x1, unprogrammed default
  1207  2007                     	org	8199
  1208  2007  3FD9               	dw	16345
  1209                           
  1210                           ;Config register CONFIG2 @ 0x2008
  1211                           ;	Brown-out Reset Selection bit
  1212                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1213                           ;	Flash Program Memory Self Write Enable bits
  1214                           ;	WRT = OFF, Write protection off
  1215  2008                     	org	8200
  1216  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      6       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Read
    _I2C_Start->_I2C_Write
    _I2C_RepeatedStart->_I2C_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     120
                                              3 COMMON     3     3      0
                           _I2C_Init
                           _I2C_Read
                  _I2C_RepeatedStart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            1     1      0      30
                                              1 COMMON     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_RepeatedStart                                    1     1      0      30
                                              1 COMMON     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             3     3      0      30
                                              0 COMMON     3     3      0
                            _I2C_Ack
                           _I2C_Nack
 ---------------------------------------------------------------------------------
 (2) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _I2C_Read
     _I2C_Ack
     _I2C_Nack
   _I2C_RepeatedStart
     _I2C_Write
       _I2C_Wait
   _I2C_Start
     _I2C_Write
   _I2C_Stop
   _I2C_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      6       8       1       61.5%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Mar 14 13:37:15 2021

        __size_of_I2C_Start 001A                 _SSPSTATbits 0094          __size_of_I2C_Write 0014  
                        l42 0746                          l51 0730                          l44 074A  
                        l61 06EC                          l53 0741                          l46 075B  
                        l39 07A5                          l63 06F2                          l71 0713  
                        l80 077B                          l64 06F3                          l57 0727  
                        l49 072C                          l83 06F8                          l75 0760  
                        l67 0709                          l92 0705                          l69 070D  
                        l86 06FC                          l89 0701                          u10 06F2  
                        u11 06F1                          u20 0724                          u21 0723  
                        u30 06FC                          u31 06FB                          u40 0705  
                        u41 0704                          u50 078D                          u51 078C  
                        u60 074A                          u61 0749                          u70 0753  
                        u71 0752                          u80 0730                          u81 072F  
                        u90 0739                          u91 0738                         l711 0719  
                       l721 0726                         l713 071E                         l801 07D6  
                       l731 0784                         l707 06EC                         l715 0724  
                       l803 07DB                         l741 079A                         l733 0787  
                       l725 06F4                         l709 0715                         l805 07E9  
                       l743 079D                         l735 0788                         l727 06FD  
                       l751 0753                         l745 079F                         l737 078D  
                       l729 077D                         l761 0739                         l747 07A2  
                       l739 0794                         l755 0755                         l781 076A  
                       l765 073B                         l749 0743                         l783 076F  
                       l775 075D                         l759 0729                         l791 07A6  
                       l785 0775                         l777 075D                         l769 0706  
                       l793 07B3                         l787 077A                         l779 0764  
                       l795 07B9                         l797 07C2                         l799 07C7  
                       u100 070D                         u101 070C                         u110 0764  
                       u111 0763                         u120 076F                         u121 076E  
                       u130 07C7                         u131 07C6                         u140 07DB  
                       u141 07DA                         u157 07AC                         u167 07EF  
           __end_of_I2C_Ack 06FD                        _data 0078                        _main 07A6  
          __end_of_I2C_Nack 0706            __end_of_I2C_Init 07A6            __end_of_I2C_Read 077C  
                      btemp 007E            __end_of_I2C_Wait 06F4            __end_of_I2C_Stop 0714  
                      start 0001                       ?_main 0071    I2C_RepeatedStart@address 0072  
                     _SSPIE 0463                       _SSPIF 0063           __end_of_I2C_Start 075C  
         __end_of_I2C_Write 0728                       status 0003                       wtemp0 007E  
           __initialization 07FA                __end_of_main 07FA                   ??_I2C_Ack 0071  
                    ??_main 0074            I2C_Start@address 0072                      _SSPADD 0093  
                    _SSPBUF 0013                   ?_I2C_Nack 0071                   ?_I2C_Init 0071  
                 ?_I2C_Read 0071                   ?_I2C_Wait 0071                   ?_I2C_Stop 0071  
   __end_of__initialization 07FC              __pcstackCOMMON 0071                  ??_I2C_Nack 0071  
                ??_I2C_Init 0071                  ??_I2C_Read 0071                  ??_I2C_Wait 0071  
                ??_I2C_Stop 0071                I2C_Init@mode 0071                  __pmaintext 07A6  
              I2C_Read@mode 0072              I2C_Read@buffer 0073                     _I2C_Ack 06F4  
                   _ACKSTAT 048E                     _SSPCON2 0091                     _SSPSTAT 0094  
                 _I2C_Start 0742                   _I2C_Write 0714                     _ackMode 0077  
                   __ptext1 0706                     __ptext2 0742                     __ptext3 0728  
                   __ptext4 0714                     __ptext5 06EC                     __ptext6 075C  
                   __ptext7 06FD                     __ptext8 06F4                     __ptext9 077C  
      end_of_initialization 07FC                  ?_I2C_Start 0071                  ?_I2C_Write 0071  
                 _TRISCbits 0087           __size_of_I2C_Nack 0009           __size_of_I2C_Init 002A  
         __size_of_I2C_Read 0020           __size_of_I2C_Wait 0008           __size_of_I2C_Stop 000E  
       start_initialization 07FA                 ??_I2C_Start 0072                 ??_I2C_Write 0071  
         _I2C_RepeatedStart 0728                    ?_I2C_Ack 0071          ?_I2C_RepeatedStart 0071  
               __pbssCOMMON 0077                   ___latbits 0002         ??_I2C_RepeatedStart 0072  
 __end_of_I2C_RepeatedStart 0742                    _I2C_Nack 06FD                    _I2C_Init 077C  
                  _I2C_Read 075C                    _I2C_Wait 06EC                    _I2C_Stop 0706  
          __size_of_I2C_Ack 0009  __size_of_I2C_RepeatedStart 001A               I2C_Write@data 0071  
             __size_of_main 0054                 _SSPCON2bits 0091                  _SSPCONbits 0014  
